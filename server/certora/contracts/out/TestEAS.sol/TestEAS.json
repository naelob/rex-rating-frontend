{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISchemaRegistry",
          "name": "registry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessDenied",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyRevoked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyRevokedOffchain",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyTimestamped",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeadlineExpired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAttestation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAttestations",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidExpirationTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidNonce",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidOffset",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRegistry",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRevocation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRevocations",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSchema",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidShortString",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidVerifier",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Irrevocable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotPayable",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "StringTooLong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WrongSchema",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "attester",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "uid",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "schemaUID",
          "type": "bytes32"
        }
      ],
      "name": "Attested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldNonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNonce",
          "type": "uint256"
        }
      ],
      "name": "NonceIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "attester",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "uid",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "schemaUID",
          "type": "bytes32"
        }
      ],
      "name": "Revoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revoker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "timestamp",
          "type": "uint64"
        }
      ],
      "name": "RevokedOffchain",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "timestamp",
          "type": "uint64"
        }
      ],
      "name": "Timestamped",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct AttestationRequestData",
              "name": "data",
              "type": "tuple"
            }
          ],
          "internalType": "struct AttestationRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "attest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct AttestationRequestData",
              "name": "data",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct Signature",
              "name": "signature",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "deadline",
              "type": "uint64"
            }
          ],
          "internalType": "struct DelegatedAttestationRequest",
          "name": "delegatedRequest",
          "type": "tuple"
        }
      ],
      "name": "attestByDelegation",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAttestTypeHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "uid",
          "type": "bytes32"
        }
      ],
      "name": "getAttestation",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "time",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "revocationTime",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Attestation",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDomainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "revoker",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "getRevokeOffchain",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRevokeTypeHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSchemaRegistry",
      "outputs": [
        {
          "internalType": "contract ISchemaRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTime",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "getTimestamp",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newNonce",
          "type": "uint256"
        }
      ],
      "name": "increaseNonce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "uid",
          "type": "bytes32"
        }
      ],
      "name": "isAttestationValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct AttestationRequestData[]",
              "name": "data",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct MultiAttestationRequest[]",
          "name": "multiRequests",
          "type": "tuple[]"
        }
      ],
      "name": "multiAttest",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct AttestationRequestData[]",
              "name": "data",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct Signature[]",
              "name": "signatures",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "deadline",
              "type": "uint64"
            }
          ],
          "internalType": "struct MultiDelegatedAttestationRequest[]",
          "name": "multiDelegatedRequests",
          "type": "tuple[]"
        }
      ],
      "name": "multiAttestByDelegation",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RevocationRequestData[]",
              "name": "data",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct MultiRevocationRequest[]",
          "name": "multiRequests",
          "type": "tuple[]"
        }
      ],
      "name": "multiRevoke",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RevocationRequestData[]",
              "name": "data",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct Signature[]",
              "name": "signatures",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "revoker",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "deadline",
              "type": "uint64"
            }
          ],
          "internalType": "struct MultiDelegatedRevocationRequest[]",
          "name": "multiDelegatedRequests",
          "type": "tuple[]"
        }
      ],
      "name": "multiRevokeByDelegation",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "multiRevokeOffchain",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "multiTimestamp",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RevocationRequestData",
              "name": "data",
              "type": "tuple"
            }
          ],
          "internalType": "struct RevocationRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RevocationRequestData",
              "name": "data",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct Signature",
              "name": "signature",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "revoker",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "deadline",
              "type": "uint64"
            }
          ],
          "internalType": "struct DelegatedRevocationRequest",
          "name": "delegatedRequest",
          "type": "tuple"
        }
      ],
      "name": "revokeByDelegation",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "revokeOffchain",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "newTime",
          "type": "uint64"
        }
      ],
      "name": "setTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "timestamp",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101e0604052600780546001600160401b03191690553480156200002257600080fd5b50604051620043103803806200431083398101604081905262000045916200021d565b60408051808201825260038082526245415360e81b602080840191909152835180850190945260058452640312e332e360dc1b90840152600160805260a052600060c0819052839290829082906200009f90839062000198565b61018052620000b081600162000198565b6101a052815160208084019190912061014052815190820120610160524661010052620001416101405161016051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60e052505030610120526002620001598382620002f4565b5050506001600160a01b03811662000184576040516311a1e69760e01b815260040160405180910390fd5b6001600160a01b03166101c0525062000435565b6000602083511015620001b857620001b083620001d1565b9050620001cb565b81620001c58482620002f4565b5060ff90505b92915050565b600080829050601f8151111562000208578260405163305a27a960e01b8152600401620001ff9190620003c0565b60405180910390fd5b8051620002158262000410565b179392505050565b6000602082840312156200023057600080fd5b81516001600160a01b03811681146200024857600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200027a57607f821691505b6020821081036200029b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ef57600081815260208120601f850160051c81016020861015620002ca5750805b601f850160051c820191505b81811015620002eb57828155600101620002d6565b5050505b505050565b81516001600160401b038111156200031057620003106200024f565b620003288162000321845462000265565b84620002a1565b602080601f831160018114620003605760008415620003475750858301515b600019600386901b1c1916600185901b178555620002eb565b600085815260208120601f198616915b82811015620003915788860151825594840194600190910190840162000370565b5085821015620003b05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015620003ef57858101830151858201604001528201620003d1565b506000604082860101526040601f19601f8301168501019250505092915050565b805160208083015191908110156200029b5760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c051613e46620004ca60003960008181610567015281816114110152611b3c01526000610cd001526000610ca6015260006123ab01526000612383015260006122de015260006123080152600061233201526000610bbf01526000610b9601526000610b6d0152613e466000f3fe60806040526004361061019c5760003560e01c80637e4e1292116100ec578063cf190f341161008a578063e71ff36511610064578063e71ff36514610518578063ed24911d14610538578063f10b5cc81461054d578063f17325e71461059157600080fd5b8063cf190f3414610483578063d45c4435146104a3578063e30bb563146104d957600080fd5b8063a3112a64116100c6578063a3112a64146103c4578063a6d4dbc7146103f1578063b469318d14610404578063b83010d31461045057600080fd5b80637e4e12921461034b57806384b0196e1461038957806395411525146103b157600080fd5b806344adc90e116101595780634d003070116101335780634d003070146102e157806354fd4d5014610301578063557ed1ba1461031657806379f7573a1461032b57600080fd5b806344adc90e1461029b57806346926267146102bb5780634cb7e9e5146102ce57600080fd5b80630eabf660146101a157806312b11a17146101b657806313893f61146101f857806317d7de7c146102305780632d0335ab146102525780633c04271514610288575b600080fd5b6101b46101af366004612f30565b6105a4565b005b3480156101c257600080fd5b507ffeb2925a02bae3dae48d424a0437a2b6ac939aa9230ddc55a1a76f065d9880765b6040519081526020015b60405180910390f35b34801561020457600080fd5b50610218610213366004612f30565b6106f6565b6040516001600160401b0390911681526020016101ef565b34801561023c57600080fd5b50610245610746565b6040516101ef9190612fc1565b34801561025e57600080fd5b506101e561026d366004613000565b6001600160a01b031660009081526003602052604090205490565b6101e561029636600461301d565b6107d8565b6102ae6102a9366004612f30565b6108bd565b6040516101ef9190613057565b6101b46102c936600461309b565b610a06565b6101b46102dc366004612f30565b610a8a565b3480156102ed57600080fd5b506102186102fc3660046130b3565b610b4f565b34801561030d57600080fd5b50610245610b66565b34801561032257600080fd5b50610218610c09565b34801561033757600080fd5b506101b46103463660046130b3565b610c18565b34801561035757600080fd5b506101b46103663660046130e3565b6007805467ffffffffffffffff19166001600160401b0392909216919091179055565b34801561039557600080fd5b5061039e610c98565b6040516101ef9796959493929190613139565b6102ae6103bf366004612f30565b610d20565b3480156103d057600080fd5b506103e46103df3660046130b3565b610f4d565b6040516101ef9190613265565b6101b46103ff366004613278565b611093565b34801561041057600080fd5b5061021861041f36600461328b565b6001600160a01b0391909116600090815260066020908152604080832093835292905220546001600160401b031690565b34801561045c57600080fd5b507fb5d556f07587ec0f08cf386545cc4362c702a001650c2058002615ee5c9d1e756101e5565b34801561048f57600080fd5b5061021861049e3660046130b3565b611138565b3480156104af57600080fd5b506102186104be3660046130b3565b6000908152600560205260409020546001600160401b031690565b3480156104e557600080fd5b506105086104f43660046130b3565b600090815260046020526040902054151590565b60405190151581526020016101ef565b34801561052457600080fd5b50610218610533366004612f30565b611150565b34801561054457600080fd5b506101e5611193565b34801561055957600080fd5b506040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526020016101ef565b6101e561059f3660046132b7565b61119d565b348160005b818110156106ef576000198201811460008686848181106105cc576105cc6132f1565b90506020028101906105de9190613307565b6105e790613529565b602081015180519192509080158061060457508260400151518114155b156106225760405163251f56a160e21b815260040160405180910390fd5b60005b818110156106b8576106b06040518060a0016040528086600001518152602001858481518110610657576106576132f1565b602002602001015181526020018660400151848151811061067a5761067a6132f1565b6020026020010151815260200186606001516001600160a01b0316815260200186608001516001600160401b031681525061123d565b600101610625565b506106ce83600001518385606001518a886113ee565b6106d89088613639565b9650505050506106e88160010190565b90506105a9565b5050505050565b600080610701611879565b90508260005b8181101561073a5761073233878784818110610725576107256132f1565b90506020020135856118a2565b600101610707565b50909150505b92915050565b6060600280546107559061364c565b80601f01602080910402602001604051908101604052809291908181526020018280546107819061364c565b80156107ce5780601f106107a3576101008083540402835291602001916107ce565b820191906000526020600020905b8154815290600101906020018083116107b157829003601f168201915b5050505050905090565b60006107eb6107e683613782565b611955565b604080516001808252818301909252600091816020015b6040805160c081018252600080825260208083018290529282018190526060808301829052608083015260a0820152825260001990920191018161080257905050905061085260208401846137fc565b61085b90613812565b8160008151811061086e5761086e6132f1565b602090810291909101015261089783358261088f60c0870160a08801613000565b346001611ab0565b602001516000815181106108ad576108ad6132f1565b6020026020010151915050919050565b6060816000816001600160401b038111156108da576108da613327565b60405190808252806020026020018201604052801561090d57816020015b60608152602001906001900390816108f85790505b509050600034815b848110156109f0576000198501811436898984818110610937576109376132f1565b9050602002810190610949919061381e565b90506109586020820182613834565b905060000361097a5760405163251f56a160e21b815260040160405180910390fd5b600061099f823561098e6020850185613834565b6109979161387d565b338887611ab0565b80519091506109ae9086613639565b945080602001518785815181106109c7576109c76132f1565b6020026020010181905250806020015151860195505050506109e98160010190565b9050610915565b506109fb838361201b565b979650505050505050565b604080516001808252818301909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081610a1d579050509050610a58368390038301602084016138f0565b81600081518110610a6b57610a6b6132f1565b6020908102919091010152610a85823582333460016113ee565b505050565b348160005b818110156106ef576000198201811436868684818110610ab157610ab16132f1565b9050602002810190610ac3919061381e565b9050610b308135610ad7602084018461390c565b808060200260200160405190810160405280939291908181526020016000905b82821015610b2357610b14604083028601368190038101906138f0565b81526020019060010190610af7565b50505050503388866113ee565b610b3a9086613639565b94505050610b488160010190565b9050610a8f565b600080610b5a611879565b90506107408382612104565b6060610b917f0000000000000000000000000000000000000000000000000000000000000000612194565b610bba7f0000000000000000000000000000000000000000000000000000000000000000612194565b610be37f0000000000000000000000000000000000000000000000000000000000000000612194565b604051602001610bf593929190613955565b604051602081830303815290604052905090565b6000610c13611879565b905090565b33600090815260036020526040902054808211610c4857604051633ab3447f60e11b815260040160405180910390fd5b3360009081526003602090815260409182902084905581518381529081018490527f57b09af877df9068fd60a69d7b21f5576b8b38955812d6ae4ac52942f1e38fb7910160405180910390a15050565b600060608082808083610ccb7f000000000000000000000000000000000000000000000000000000000000000083612226565b610cf67f00000000000000000000000000000000000000000000000000000000000000006001612226565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060816000816001600160401b03811115610d3d57610d3d613327565b604051908082528060200260200182016040528015610d7057816020015b6060815260200190600190039081610d5b5790505b509050600034815b848110156109f0576000198501811436898984818110610d9a57610d9a6132f1565b9050602002810190610dac9190613307565b9050366000610dbe6020840184613834565b909250905080801580610ddf5750610dd960408501856139af565b90508114155b15610dfd5760405163251f56a160e21b815260040160405180910390fd5b60005b81811015610ed057610ec86040518060a0016040528087600001358152602001868685818110610e3257610e326132f1565b9050602002810190610e4491906137fc565b610e4d90613812565b8152602001610e5f60408901896139af565b85818110610e6f57610e6f6132f1565b905060600201803603810190610e8591906139f7565b8152602001610e9a6080890160608a01613000565b6001600160a01b03168152602001610eb860a0890160808a016130e3565b6001600160401b03169052611955565b600101610e00565b506000610ef98535610ee2858761387d565b610ef26080890160608a01613000565b8b8a611ab0565b8051909150610f089089613639565b975080602001518a8881518110610f2157610f216132f1565b602002602001018190525080602001515189019850505050505050610f468160010190565b9050610d78565b610f55612e96565b6000828152600460208181526040928390208351610140810185528154815260018201549281019290925260028101546001600160401b0380821695840195909552600160401b810485166060840152600160801b90049093166080820152600383015460a0820152908201546001600160a01b0390811660c0830152600583015490811660e0830152600160a01b900460ff1615156101008201526006820180549192916101208401919061100a9061364c565b80601f01602080910402602001604051908101604052809291908181526020018280546110369061364c565b80156110835780601f1061105857610100808354040283529160200191611083565b820191906000526020600020905b81548152906001019060200180831161106657829003601f168201915b5050505050815250509050919050565b6110aa6110a536839003830183613a13565b61123d565b604080516001808252818301909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816110c15790505090506110fc368390038301602084016138f0565b8160008151811061110f5761110f6132f1565b6020908102919091010152610a8582358261113060e0860160c08701613000565b3460016113ee565b600080611143611879565b90506107403384836118a2565b60008061115b611879565b90508260005b8181101561073a5761118b86868381811061117e5761117e6132f1565b9050602002013584612104565b600101611161565b6000610c136122d1565b604080516001808252818301909252600091829190816020015b6040805160c081018252600080825260208083018290529282018190526060808301829052608083015260a082015282526000199092019101816111b757905050905061120760208401846137fc565b61121090613812565b81600081518110611223576112236132f1565b602090810291909101015261089783358233346001611ab0565b60808101516001600160401b031615801590611275575061125c611879565b6001600160401b031681608001516001600160401b0316105b1561129357604051631ab7da6b60e01b815260040160405180910390fd5b602080820151604080840151606085015185518451858701516001600160a01b03841660009081526003909852948720805496979496949561136d957fb5d556f07587ec0f08cf386545cc4362c702a001650c2058002615ee5c9d1e7595949392886112fe83613a81565b909155506080808c01516040805160208101999099526001600160a01b039097169688019690965260608701949094529285019190915260a084015260c08301526001600160401b031660e0820152610100015b604051602081830303815290604052805190602001206123fc565b90506113cb8460600151828460200151856040015186600001516040516020016113b793929190928352602083019190915260f81b6001600160f81b031916604082015260410190565b604051602081830303815290604052612429565b6113e857604051638baa579f60e01b815260040160405180910390fd5b50505050565b6040516351753e3760e11b81526004810186905260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a2ea7c6e90602401600060405180830381865afa158015611458573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114809190810190613a9a565b80519091506114a257604051635f9bd90760e11b815260040160405180910390fd5b85516000816001600160401b038111156114be576114be613327565b6040519080825280602002602001820160405280156114f757816020015b6114e4612e96565b8152602001906001900390816114dc5790505b5090506000826001600160401b0381111561151457611514613327565b60405190808252806020026020018201604052801561153d578160200160208202803683370190505b50905060005b8381101561185b5760008a828151811061155f5761155f6132f1565b602090810291909101810151805160009081526004909252604090912080549192509061159f5760405163c5723b5160e01b815260040160405180910390fd5b8c8160010154146115c357604051635f9bd90760e11b815260040160405180910390fd5b60058101546001600160a01b038c81169116146115f357604051634ca8886760e01b815260040160405180910390fd5b6005810154600160a01b900460ff1661161f5760405163157bd4c360e01b815260040160405180910390fd5b6002810154600160801b90046001600160401b0316156116525760405163905e710760e01b815260040160405180910390fd5b61165a611879565b60028201805467ffffffffffffffff60801b198116600160801b6001600160401b03948516810291821793849055604080516101408101825287548152600188015460208201529386169286169290921791830191909152600160401b8304841660608301529091049091166080820152600382015460a082015260048201546001600160a01b0390811660c0830152600583015490811660e0830152600160a01b900460ff16151561010082015260068201805483916101208401916117209061364c565b80601f016020809104026020016040519081016040528092919081815260200182805461174c9061364c565b80156117995780601f1061176e57610100808354040283529160200191611799565b820191906000526020600020905b81548152906001019060200180831161177c57829003601f168201915b5050505050815250508584815181106117b4576117b46132f1565b602002602001018190525081602001518484815181106117d6576117d66132f1565b6020026020010181815250508c8b6001600160a01b03168685815181106117ff576117ff6132f1565b602002602001015160c001516001600160a01b03167ff930a6e2523c9cc298691873087a740550b8fc85a0680830414c148ed927f615856000015160405161184991815260200190565b60405180910390a45050600101611543565b5061186b84838360018b8b61248a565b9a9950505050505050505050565b6007546000906001600160401b03161561189d57506007546001600160401b031690565b504290565b6001600160a01b038316600090815260066020908152604080832085845291829052909120546001600160401b0316156118ef5760405163ec9d6eeb60e01b815260040160405180910390fd5b600083815260208290526040808220805467ffffffffffffffff19166001600160401b0386169081179091559051909185916001600160a01b038816917f92a1f7a41a7c585a8b09e25b195e225b1d43248daca46b0faf9e0792777a222991a450505050565b60808101516001600160401b03161580159061198d5750611974611879565b6001600160401b031681608001516001600160401b0316105b156119ab57604051631ab7da6b60e01b815260040160405180910390fd5b6020808201516040808401516060808601518651855186880151868801519488015160808901518051908b012060a08a01516001600160a01b03871660009081526003909c52988b2080549a9b989a989961136d997ffeb2925a02bae3dae48d424a0437a2b6ac939aa9230ddc55a1a76f065d988076999493928c611a2f83613a81565b919050558e608001516040516020016113529b9a999897969594939291909a8b526001600160a01b03998a1660208c015260408b01989098529590971660608901526001600160401b03938416608089015291151560a088015260c087015260e0860152610100850193909352610120840152166101408201526101600190565b6040805180820190915260008152606060208201528451604080518082019091526000815260606020820152816001600160401b03811115611af457611af4613327565b604051908082528060200260200182016040528015611b1d578160200160208202803683370190505b5060208201526040516351753e3760e11b8152600481018990526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a2ea7c6e90602401600060405180830381865afa158015611b8b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bb39190810190613a9a565b8051909150611bd557604051635f9bd90760e11b815260040160405180910390fd5b6000836001600160401b03811115611bef57611bef613327565b604051908082528060200260200182016040528015611c2857816020015b611c15612e96565b815260200190600190039081611c0d5790505b5090506000846001600160401b03811115611c4557611c45613327565b604051908082528060200260200182016040528015611c6e578160200160208202803683370190505b50905060005b85811015611ffa5760008b8281518110611c9057611c906132f1565b6020026020010151905060006001600160401b031681602001516001600160401b031614158015611cde5750611cc4611879565b6001600160401b031681602001516001600160401b031611155b15611cfc576040516308e8b93760e01b815260040160405180910390fd5b8460400151158015611d0f575080604001515b15611d2d5760405163157bd4c360e01b815260040160405180910390fd5b60006040518061014001604052806000801b81526020018f8152602001611d52611879565b6001600160401b0316815260200183602001516001600160401b0316815260200160006001600160401b031681526020018360600151815260200183600001516001600160a01b031681526020018d6001600160a01b0316815260200183604001511515815260200183608001518152509050600080600090505b611dd78382612796565b60008181526004602052604090205490925015611df657600101611dcd565b8183526000828152600460208181526040928390208651815590860151600182015591850151600283018054606088015160808901516001600160401b03908116600160801b0267ffffffffffffffff60801b19928216600160401b026fffffffffffffffffffffffffffffffff199094169190951617919091171691909117905560a0850151600383015560c085015190820180546001600160a01b039283166001600160a01b031990911617905560e08501516005830180546101008801511515600160a01b026001600160a81b031990911692909316919091179190911790556101208401518491906006820190611ef19082613bbf565b505050606084015115611f2f576060840151600090815260046020526040902054611f2f5760405163c5723b5160e01b815260040160405180910390fd5b82878681518110611f4257611f426132f1565b60200260200101819052508360a00151868681518110611f6457611f646132f1565b6020026020010181815250508189602001518681518110611f8757611f876132f1565b6020026020010181815250508f8e6001600160a01b031685600001516001600160a01b03167f8bf46bf4cfd674fa735a3d63ec1c9ad4153f033c290341f3a588b75685141b3585604051611fdd91815260200190565b60405180910390a450505050611ff38160010190565b9050611c74565b5061200a83838360008c8c61248a565b845250919998505050505050505050565b60606000826001600160401b0381111561203757612037613327565b604051908082528060200260200182016040528015612060578160200160208202803683370190505b508451909150600090815b818110156120f9576000878281518110612087576120876132f1565b6020026020010151905060008151905060005b818110156120e5578281815181106120b4576120b46132f1565b60200260200101518787815181106120ce576120ce6132f1565b60209081029190910101526001958601950161209a565b5050506120f28160010190565b905061206b565b509195945050505050565b6000828152600560205260409020546001600160401b03161561213a576040516317133ca360e11b815260040160405180910390fd5b600082815260056020526040808220805467ffffffffffffffff19166001600160401b0385169081179091559051909184917f5aafceeb1c7ad58e4a84898bdee37c02c0fc46e7d24e6b60e8209449f183459f9190a35050565b606060006121a1836127f5565b60010190506000816001600160401b038111156121c0576121c0613327565b6040519080825280601f01601f1916602001820160405280156121ea576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846121f457509392505050565b606060ff831461224057612239836128cd565b9050610740565b81805461224c9061364c565b80601f01602080910402602001604051908101604052809291908181526020018280546122789061364c565b80156122c55780601f1061229a576101008083540402835291602001916122c5565b820191906000526020600020905b8154815290600101906020018083116122a857829003601f168201915b50505050509050610740565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561232a57507f000000000000000000000000000000000000000000000000000000000000000046145b1561235457507f000000000000000000000000000000000000000000000000000000000000000090565b610c13604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60006107406124096122d1565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000612438858561290c565b9092509050600081600481111561245157612451613c7e565b14801561246f5750856001600160a01b0316826001600160a01b0316145b806124805750612480868686612951565b9695505050505050565b845160009060018190036124e2576124da88886000815181106124af576124af6132f1565b6020026020010151886000815181106124ca576124ca6132f1565b6020026020010151888888612a3d565b915050612480565b60208801516001600160a01b03811661255d5760005b8281101561254257878181518110612512576125126132f1565b602002602001015160001461253a57604051631574f9f360e01b815260040160405180910390fd5b6001016124f8565b5083156125525761255285612c79565b600092505050612480565b600080826001600160a01b031663ce46e0466040518163ffffffff1660e01b8152600401602060405180830381865afa15801561259e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125c29190613c94565b905060005b8481101561264d5760008a82815181106125e3576125e36132f1565b60200260200101519050806000036125fb5750612645565b8261261957604051631574f9f360e01b815260040160405180910390fd5b8881111561263a5760405163044044a560e21b815260040160405180910390fd5b978890039792909201915b6001016125c7565b5087156126e9576040516388e5b2d960e01b81526001600160a01b038416906388e5b2d9908490612684908e908e90600401613cb1565b60206040518083038185885af11580156126a2573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906126c79190613c94565b6126e45760405163bf2f3a8b60e01b815260040160405180910390fd5b612779565b6040516348ed85bf60e11b81526001600160a01b038416906391db0b7e908490612719908e908e90600401613cb1565b60206040518083038185885af1158015612737573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061275c9190613c94565b6127795760405163e8bee83960e01b815260040160405180910390fd5b85156127885761278887612c79565b509998505050505050505050565b60208083015160c084015160e0850151604080870151606088015161010089015160a08a01516101208b015194516000996127d799989796918c9101613d27565b60405160208183030381529060405280519060200120905092915050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106128345772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310612860576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061287e57662386f26fc10000830492506010015b6305f5e1008310612896576305f5e100830492506008015b61271083106128aa57612710830492506004015b606483106128bc576064830492506002015b600a83106107405760010192915050565b606060006128da83612c8c565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b60008082516041036129425760208301516040840151606085015160001a61293687828585612cb4565b9450945050505061294a565b506000905060025b9250929050565b6000806000856001600160a01b0316631626ba7e60e01b868660405160240161297b929190613dc4565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516129b99190613de5565b600060405180830381855afa9150503d80600081146129f4576040519150601f19603f3d011682016040523d82523d6000602084013e6129f9565b606091505b5091509150818015612a0d57506020815110155b801561248057508051630b135d3f60e11b90612a329083016020908101908401613df7565b149695505050505050565b60208601516000906001600160a01b038116612a8b578515612a7257604051631574f9f360e01b815260040160405180910390fd5b8215612a8157612a8184612c79565b6000915050612480565b8515612b3757806001600160a01b031663ce46e0466040518163ffffffff1660e01b8152600401602060405180830381865afa158015612acf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612af39190613c94565b612b1057604051631574f9f360e01b815260040160405180910390fd5b83861115612b315760405163044044a560e21b815260040160405180910390fd5b85840393505b8415612bd05760405163e49617e160e01b81526001600160a01b0382169063e49617e1908890612b6b908b90600401613265565b60206040518083038185885af1158015612b89573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612bae9190613c94565b612bcb5760405163ccf3bb2760e01b815260040160405180910390fd5b612c5e565b60405163e60c350560e01b81526001600160a01b0382169063e60c3505908890612bfe908b90600401613265565b60206040518083038185885af1158015612c1c573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612c419190613c94565b612c5e5760405163bd8ba84d60e01b815260040160405180910390fd5b8215612c6d57612c6d84612c79565b50939695505050505050565b8015612c8957612c893382612d78565b50565b600060ff8216601f81111561074057604051632cd44ac360e21b815260040160405180910390fd5b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612ceb5750600090506003612d6f565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612d3f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612d6857600060019250925050612d6f565b9150600090505b94509492505050565b80471015612dcd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612e1a576040519150601f19603f3d011682016040523d82523d6000602084013e612e1f565b606091505b5050905080610a855760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401612dc4565b604080516101408101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820183905261010082019290925261012081019190915290565b60008083601f840112612efe57600080fd5b5081356001600160401b03811115612f1557600080fd5b6020830191508360208260051b850101111561294a57600080fd5b60008060208385031215612f4357600080fd5b82356001600160401b03811115612f5957600080fd5b612f6585828601612eec565b90969095509350505050565b60005b83811015612f8c578181015183820152602001612f74565b50506000910152565b60008151808452612fad816020860160208601612f71565b601f01601f19169290920160200192915050565b602081526000612fd46020830184612f95565b9392505050565b6001600160a01b0381168114612c8957600080fd5b8035612ffb81612fdb565b919050565b60006020828403121561301257600080fd5b8135612fd481612fdb565b60006020828403121561302f57600080fd5b81356001600160401b0381111561304557600080fd5b820160e08185031215612fd457600080fd5b6020808252825182820181905260009190848201906040850190845b8181101561308f57835183529284019291840191600101613073565b50909695505050505050565b6000606082840312156130ad57600080fd5b50919050565b6000602082840312156130c557600080fd5b5035919050565b80356001600160401b0381168114612ffb57600080fd5b6000602082840312156130f557600080fd5b612fd4826130cc565b600081518084526020808501945080840160005b8381101561312e57815187529582019590820190600101613112565b509495945050505050565b60ff60f81b8816815260e06020820152600061315860e0830189612f95565b828103604084015261316a8189612f95565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152905061186b81856130fe565b6000610140825184526020830151602085015260408301516131c860408601826001600160401b03169052565b5060608301516131e360608601826001600160401b03169052565b5060808301516131fe60808601826001600160401b03169052565b5060a083015160a085015260c083015161322360c08601826001600160a01b03169052565b5060e083015161323e60e08601826001600160a01b03169052565b50610100838101511515908501526101208084015181860183905261248083870182612f95565b602081526000612fd4602083018461319b565b600061010082840312156130ad57600080fd5b6000806040838503121561329e57600080fd5b82356132a981612fdb565b946020939093013593505050565b6000602082840312156132c957600080fd5b81356001600160401b038111156132df57600080fd5b820160408185031215612fd457600080fd5b634e487b7160e01b600052603260045260246000fd5b60008235609e1983360301811261331d57600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171561335f5761335f613327565b60405290565b60405160c081016001600160401b038111828210171561335f5761335f613327565b604051608081016001600160401b038111828210171561335f5761335f613327565b604051601f8201601f191681016001600160401b03811182821017156133d1576133d1613327565b604052919050565b60006001600160401b038211156133f2576133f2613327565b5060051b60200190565b60006040828403121561340e57600080fd5b604051604081018181106001600160401b038211171561343057613430613327565b604052823581526020928301359281019290925250919050565b60006060828403121561345c57600080fd5b604051606081018181106001600160401b038211171561347e5761347e613327565b604052905080823560ff8116811461349557600080fd5b8082525060208301356020820152604083013560408201525092915050565b600082601f8301126134c557600080fd5b813560206134da6134d5836133d9565b6133a9565b828152606092830285018201928282019190878511156134f957600080fd5b8387015b8581101561351c5761350f898261344a565b84529284019281016134fd565b5090979650505050505050565b600060a0823603121561353b57600080fd5b61354361333d565b823581526020808401356001600160401b038082111561356257600080fd5b9085019036601f83011261357557600080fd5b81356135836134d5826133d9565b81815260069190911b830184019084810190368311156135a257600080fd5b938501935b828510156135cb576135b936866133fc565b825285820191506040850194506135a7565b808688015250505060408601359250808311156135e757600080fd5b50506135f5368286016134b4565b60408301525061360760608401612ff0565b6060820152613618608084016130cc565b608082015292915050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561074057610740613623565b600181811c9082168061366057607f821691505b6020821081036130ad57634e487b7160e01b600052602260045260246000fd5b8015158114612c8957600080fd5b60006001600160401b038211156136a7576136a7613327565b50601f01601f191660200190565b600060c082840312156136c757600080fd5b6136cf613365565b905081356136dc81612fdb565b815260206136eb8382016130cc565b8183015260408301356136fd81613680565b60408301526060838101359083015260808301356001600160401b0381111561372557600080fd5b8301601f8101851361373657600080fd5b80356137446134d58261368e565b818152868483850101111561375857600080fd5b818484018583013760008483830101528060808601525050505060a082013560a082015292915050565b600060e0823603121561379457600080fd5b61379c61333d565b8235815260208301356001600160401b038111156137b957600080fd5b6137c5368286016136b5565b6020830152506137d8366040850161344a565b604082015260a08301356137eb81612fdb565b606082015261361860c084016130cc565b6000823560be1983360301811261331d57600080fd5b600061074036836136b5565b60008235603e1983360301811261331d57600080fd5b6000808335601e1984360301811261384b57600080fd5b8301803591506001600160401b0382111561386557600080fd5b6020019150600581901b360382131561294a57600080fd5b600061388b6134d5846133d9565b80848252602080830192508560051b8501368111156138a957600080fd5b855b818110156138e45780356001600160401b038111156138ca5760008081fd5b6138d636828a016136b5565b8652509382019382016138ab565b50919695505050505050565b60006040828403121561390257600080fd5b612fd483836133fc565b6000808335601e1984360301811261392357600080fd5b8301803591506001600160401b0382111561393d57600080fd5b6020019150600681901b360382131561294a57600080fd5b60008451613967818460208901612f71565b8083019050601760f91b8082528551613987816001850160208a01612f71565b600192019182015283516139a2816002840160208801612f71565b0160020195945050505050565b6000808335601e198436030181126139c657600080fd5b8301803591506001600160401b038211156139e057600080fd5b602001915060608102360382131561294a57600080fd5b600060608284031215613a0957600080fd5b612fd4838361344a565b60006101008284031215613a2657600080fd5b613a2e61333d565b82358152613a3f84602085016133fc565b6020820152613a51846060850161344a565b604082015260c0830135613a6481612fdb565b6060820152613a7560e084016130cc565b60808201529392505050565b600060018201613a9357613a93613623565b5060010190565b60006020808385031215613aad57600080fd5b82516001600160401b0380821115613ac457600080fd5b9084019060808287031215613ad857600080fd5b613ae0613387565b8251815283830151613af181612fdb565b818501526040830151613b0381613680565b6040820152606083015182811115613b1a57600080fd5b80840193505086601f840112613b2f57600080fd5b82519150613b3f6134d58361368e565b8281528785848601011115613b5357600080fd5b613b6283868301878701612f71565b60608201529695505050505050565b601f821115610a8557600081815260208120601f850160051c81016020861015613b985750805b601f850160051c820191505b81811015613bb757828155600101613ba4565b505050505050565b81516001600160401b03811115613bd857613bd8613327565b613bec81613be6845461364c565b84613b71565b602080601f831160018114613c215760008415613c095750858301515b600019600386901b1c1916600185901b178555613bb7565b600085815260208120601f198616915b82811015613c5057888601518255948401946001909101908401613c31565b5085821015613c6e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b600060208284031215613ca657600080fd5b8151612fd481613680565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015613d0857605f19888703018552613cf686835161319b565b95509382019390820190600101613cda565b505085840381870152505050613d1e81856130fe565b95945050505050565b89815260006bffffffffffffffffffffffff19808b60601b166020840152808a60601b166034840152506001600160401b0360c01b808960c01b166048840152808860c01b1660508401525085151560f81b60588301528460598301528351613d97816079850160208801612f71565b60e09390931b6001600160e01b03191660799290930191820192909252607d019998505050505050505050565b828152604060208201526000613ddd6040830184612f95565b949350505050565b6000825161331d818460208701612f71565b600060208284031215613e0957600080fd5b505191905056fea2646970667358221220e2eabe40dd112cba51e8941d1cab173a502fb2840411b23c0e5929c4c1cfcb5464736f6c63430008130033",
    "sourceMap": "152:502:54:-:0;;;229:42;;;-1:-1:-1;;;;;;229:42:54;;;278:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2075:106:40;;;;;;;;;;;;-1:-1:-1;;;2075:106:40;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2075:106:40;;;;2491:1:34;705:14:39;;729;;-1:-1:-1;753:13:39;;;;320:8:54;;2075:106:40;;;;;3251:45:28;;2075:106:40;;3251:30:28;:45::i;:::-;3243:53;;3317:51;:7;3351:16;3317:33;:51::i;:::-;3306:62;;3392:22;;;;;;;;;;3378:36;;3441:25;;;;;;3424:42;;3494:13;3477:30;;3542:23;4077:11;;4090:14;;4054:81;;;1929:95;4054:81;;;3314:25:61;3355:18;;;3348:34;;;;3398:18;;;3391:34;4106:13:28;3441:18:61;;;3434:34;4129:4:28;3484:19:61;;;3477:61;4018:7:28;;3286:19:61;;4054:81:28;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;3542:23;3517:48;;-1:-1:-1;;3597:4:28;3575:27;;2162:5:40::1;:12;2170:4:::0;2162:5;:12:::1;:::i;:::-;-1:-1:-1::0;;;;;;;;2546:31:34;::::2;2542:86;;2600:17;;-1:-1:-1::0;;;2600:17:34::2;;;;;;;;;;;2542:86;-1:-1:-1::0;;;;;2638:26:34::2;;::::0;-1:-1:-1;152:502:54;;2895:341:24;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;:20::i;:::-;3058:27;;;;3014:216;3142:5;3116:46;3157:5;3142;3116:46;:::i;:::-;-1:-1:-1;1371:66:24;;-1:-1:-1;3014:216:24;2895:341;;;;:::o;1689:286::-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;-1:-1:-1;;;1860:18:24;;;;;;;;:::i;:::-;;;;;;;;1817:72;1955:11;;1938:13;1955:4;1938:13;:::i;:::-;1930:36;;1689:286;-1:-1:-1;;;1689:286:24:o;14:315:61:-;109:6;162:2;150:9;141:7;137:23;133:32;130:52;;;178:1;175;168:12;130:52;204:16;;-1:-1:-1;;;;;249:31:61;;239:42;;229:70;;295:1;292;285:12;229:70;318:5;14:315;-1:-1:-1;;;14:315:61:o;334:127::-;395:10;390:3;386:20;383:1;376:31;426:4;423:1;416:15;450:4;447:1;440:15;466:380;545:1;541:12;;;;588;;;609:61;;663:4;655:6;651:17;641:27;;609:61;716:2;708:6;705:14;685:18;682:38;679:161;;762:10;757:3;753:20;750:1;743:31;797:4;794:1;787:15;825:4;822:1;815:15;679:161;;466:380;;;:::o;977:545::-;1079:2;1074:3;1071:11;1068:448;;;1115:1;1140:5;1136:2;1129:17;1185:4;1181:2;1171:19;1255:2;1243:10;1239:19;1236:1;1232:27;1226:4;1222:38;1291:4;1279:10;1276:20;1273:47;;;-1:-1:-1;1314:4:61;1273:47;1369:2;1364:3;1360:12;1357:1;1353:20;1347:4;1343:31;1333:41;;1424:82;1442:2;1435:5;1432:13;1424:82;;;1487:17;;;1468:1;1457:13;1424:82;;;1428:3;;;1068:448;977:545;;;:::o;1698:1352::-;1818:10;;-1:-1:-1;;;;;1840:30:61;;1837:56;;;1873:18;;:::i;:::-;1902:97;1992:6;1952:38;1984:4;1978:11;1952:38;:::i;:::-;1946:4;1902:97;:::i;:::-;2054:4;;2118:2;2107:14;;2135:1;2130:663;;;;2837:1;2854:6;2851:89;;;-1:-1:-1;2906:19:61;;;2900:26;2851:89;-1:-1:-1;;1655:1:61;1651:11;;;1647:24;1643:29;1633:40;1679:1;1675:11;;;1630:57;2953:81;;2100:944;;2130:663;924:1;917:14;;;961:4;948:18;;-1:-1:-1;;2166:20:61;;;2284:236;2298:7;2295:1;2292:14;2284:236;;;2387:19;;;2381:26;2366:42;;2479:27;;;;2447:1;2435:14;;;;2314:19;;2284:236;;;2288:3;2548:6;2539:7;2536:19;2533:201;;;2609:19;;;2603:26;-1:-1:-1;;2692:1:61;2688:14;;;2704:3;2684:24;2680:37;2676:42;2661:58;2646:74;;2533:201;-1:-1:-1;;;;;2780:1:61;2764:14;;;2760:22;2747:36;;-1:-1:-1;1698:1352:61:o;3549:548::-;3661:4;3690:2;3719;3708:9;3701:21;3751:6;3745:13;3794:6;3789:2;3778:9;3774:18;3767:34;3819:1;3829:140;3843:6;3840:1;3837:13;3829:140;;;3938:14;;;3934:23;;3928:30;3904:17;;;3923:2;3900:26;3893:66;3858:10;;3829:140;;;3833:3;4018:1;4013:2;4004:6;3993:9;3989:22;3985:31;3978:42;4088:2;4081;4077:7;4072:2;4064:6;4060:15;4056:29;4045:9;4041:45;4037:54;4029:62;;;;3549:548;;;;:::o;4102:297::-;4220:12;;4267:4;4256:16;;;4250:23;;4220:12;4285:16;;4282:111;;;-1:-1:-1;;4359:4:61;4355:17;;;;4352:1;4348:25;4344:38;4333:50;;4102:297;-1:-1:-1;4102:297:61:o;:::-;152:502:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "152:502:54:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11247:2478:34;;;;;;:::i;:::-;;:::i;:::-;;2888:100:40;;;;;;;;;;-1:-1:-1;1123:66:40;2888:100;;;1106:25:61;;;1094:2;1079:18;2888:100:40;;;;;;;;14144:308:34;;;;;;;;;;-1:-1:-1;14144:308:34;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1893:31:61;;;1875:50;;1863:2;1848:18;14144:308:34;1731:200:61;3306:86:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2643:107::-;;;;;;;;;;-1:-1:-1;2643:107:40;;;;;:::i;:::-;-1:-1:-1;;;;;2727:16:40;2701:7;2727:16;;;:7;:16;;;;;;;2643:107;3163:410:34;;;;;;:::i;:::-;;:::i;3604:2315::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9195:255::-;;;;;;:::i;:::-;;:::i;9871:1345::-;;;;;;:::i;:::-;;:::i;13756:152::-;;;;;;;;;;-1:-1:-1;13756:152:34;;;;;:::i;:::-;;:::i;890:234:39:-;;;;;;;;;;;;;:::i;425:81:54:-;;;;;;;;;;;;;:::i;3559:301:40:-;;;;;;;;;;-1:-1:-1;3559:301:40;;;;;:::i;:::-;;:::i;338:81:54:-;;;;;;;;;;-1:-1:-1;338:81:54;;;;;:::i;:::-;390:12;:22;;-1:-1:-1;;390:22:54;-1:-1:-1;;;;;390:22:54;;;;;;;;;;338:81;5021:633:28;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;5950:3214:34:-;;;;;;:::i;:::-;;:::i;14800:112::-;;;;;;;;;;-1:-1:-1;14800:112:34;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9481:359::-;;;;;;:::i;:::-;;:::i;15230:148::-;;;;;;;;;;-1:-1:-1;15230:148:34;;;;;:::i;:::-;-1:-1:-1;;;;;15336:29:34;;;;15311:6;15336:29;;;:20;:29;;;;;;;;:35;;;;;;;;-1:-1:-1;;;;;15336:35:34;;15230:148;3126:100:40;;;;;;;;;;-1:-1:-1;1450:66:40;3126:100;;13939:174:34;;;;;;;;;;-1:-1:-1;13939:174:34;;;;;:::i;:::-;;:::i;15091:108::-;;;;;;;;;;-1:-1:-1;15091:108:34;;;;;:::i;:::-;15150:6;15175:17;;;:11;:17;;;;;;-1:-1:-1;;;;;15175:17:34;;15091:108;14943:117;;;;;;;;;;-1:-1:-1;14943:117:34;;;;;:::i;:::-;15005:4;15028:8;;;:3;:8;;;;;:12;:25;;;14943:117;;;;10639:14:61;;10632:22;10614:41;;10602:2;10587:18;14943:117:34;10474:187:61;14483:286:34;;;;;;;;;;-1:-1:-1;14483:286:34;;;;;:::i;:::-;;:::i;2395:106:40:-;;;;;;;;;;;;;:::i;2702:108:34:-;;;;;;;;;;-1:-1:-1;2702:108:34;;-1:-1:-1;;;;;2788:15:34;10855:32:61;10837:51;;10825:2;10810:18;2702:108:34;10666:228:61;2841:291:34;;;;;;:::i;:::-;;:::i;11247:2478::-;11816:9;11853:22;11791;11892:1827;11916:6;11912:1;:10;11892:1827;;;-1:-1:-1;;12300:10:34;;12295:15;;12237:9;12402:22;;12295:1;12402:25;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;12339:88;;;:::i;:::-;12479:26;;;;12591:11;;12339:88;;-1:-1:-1;12479:26:34;12620:15;;;:72;;;12653:21;:32;;;:39;12639:10;:53;;12620:72;12616:133;;;12719:15;;-1:-1:-1;;;12719:15:34;;;;;;;;;;;12616:133;12883:9;12878:496;12902:10;12898:1;:14;12878:496;;;12953:406;12988:353;;;;;;;;13049:21;:28;;;12988:353;;;;13109:4;13114:1;13109:7;;;;;;;;:::i;:::-;;;;;;;12988:353;;;;13153:21;:32;;;13186:1;13153:35;;;;;;;;:::i;:::-;;;;;;;12988:353;;;;13223:21;:29;;;-1:-1:-1;;;;;12988:353:34;;;;;13288:21;:30;;;-1:-1:-1;;;;;12988:353:34;;;;12953:13;:406::i;:::-;1489:1:33;1485:5;12878:496:34;;;;13518:190;13543:21;:28;;;13589:4;13611:21;:29;;;13658:14;13690:4;13518:7;:190::i;:::-;13500:208;;;;:::i;:::-;;;11945:1774;;;;11928:15;11941:1;1489::33;1485:5;;1397:102;11928:15:34;11924:19;;11892:1827;;;;11378:2347;;11247:2478;;:::o;14144:308::-;14216:6;14234:11;14248:7;:5;:7::i;:::-;14234:21;-1:-1:-1;14283:4:34;14266:14;14304:120;14328:6;14324:1;:10;14304:120;;;14371:42;14387:10;14399:4;;14404:1;14399:7;;;;;;;:::i;:::-;;;;;;;14408:4;14371:15;:42::i;:::-;1489:1:33;1485:5;14304:120:34;;;-1:-1:-1;14441:4:34;;-1:-1:-1;;14144:308:34;;;;;:::o;3306:86:40:-;3348:13;3380:5;3373:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3306:86;:::o;3163:410:34:-;3286:7;3305:31;;3319:16;3305:31;:::i;:::-;:13;:31::i;:::-;3386;;;3415:1;3386:31;;;;;;;;;3347:36;;3386:31;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3386:31:34;;-1:-1:-1;;3386:31:34;;;;;;;;;;-1:-1:-1;3347:70:34;-1:-1:-1;3437:21:34;;;;:16;:21;:::i;:::-;3427:31;;;:::i;:::-;:4;3432:1;3427:7;;;;;;;;:::i;:::-;;;;;;;;;;:31;3476:82;3484:23;;3509:4;3515:25;;;;;;;;:::i;:::-;3542:9;3553:4;3476:7;:82::i;:::-;:87;;;3564:1;3476:90;;;;;;;;:::i;:::-;;;;;;;3469:97;;;3163:410;;;:::o;3604:2315::-;3701:16;3918:13;3901:14;3918:13;-1:-1:-1;;;;;3979:23:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3948:54:34;-1:-1:-1;4012:21:34;4476:9;4012:21;4496:1287;4520:6;4516:1;:10;4496:1287;;;-1:-1:-1;;4904:10:34;;4899:15;;5001:45;5049:13;;4899:1;5049:16;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;5001:64;-1:-1:-1;5129:17:34;;;;5001:64;5129:17;:::i;:::-;:24;;5157:1;5129:29;5125:90;;5185:15;;-1:-1:-1;;;5185:15:34;;;;;;;;;;;5125:90;5229:29;5261:175;5286:19;;5323:17;;;;5286:12;5323:17;:::i;:::-;5261:175;;;:::i;:::-;5358:10;5386:14;5418:4;5261:7;:175::i;:::-;5581:13;;5229:207;;-1:-1:-1;5563:31:34;;;;:::i;:::-;;;5676:3;:8;;;5661:9;5671:1;5661:12;;;;;;;;:::i;:::-;;;;;;:23;;;;5743:3;:8;;;:15;5726:32;;;;4549:1234;;;4532:15;4545:1;1489::33;1485:5;;1397:102;4532:15:34;4528:19;;4496:1287;;;;5876:36;5887:9;5898:13;5876:10;:36::i;:::-;5869:43;3604:2315;-1:-1:-1;;;;;;;3604:2315:34:o;9195:255::-;9312:30;;;9340:1;9312:30;;;;;;;;;9274:35;;9312:30;;;;-1:-1:-1;;;;;;;;;;;;;;;;;9312:30:34;;;;;;;;;;;;;;-1:-1:-1;9274:68:34;-1:-1:-1;9352:22:34;;;;;;;9362:12;;;9352:22;:::i;:::-;:4;9357:1;9352:7;;;;;;;;:::i;:::-;;;;;;;;;;:22;9385:58;9393:14;;9409:4;9415:10;9427:9;9438:4;9385:7;:58::i;:::-;;9264:186;9195:255;:::o;9871:1345::-;10396:9;10433:13;10371:22;10463:747;10487:6;10483:1;:10;10463:747;;;-1:-1:-1;;10871:10:34;;10866:15;;10910:44;10957:13;;10866:1;10957:16;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;10910:63;-1:-1:-1;11118:81:34;11126:19;;11147:17;;;;10910:63;11147:17;:::i;:::-;11118:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;11166:10;11178:14;11194:4;11118:7;:81::i;:::-;11100:99;;;;:::i;:::-;;;10516:694;;10499:15;10512:1;1489::33;1485:5;;1397:102;10499:15:34;10495:19;;10463:747;;13756:152;13807:6;13825:11;13839:7;:5;:7::i;:::-;13825:21;;13857:22;13868:4;13874;13857:10;:22::i;890:234:39:-;932:13;1017:24;1034:6;1017:16;:24::i;:::-;1048;1065:6;1048:16;:24::i;:::-;1079:23;1096:5;1079:16;:23::i;:::-;1000:103;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;957:160;;890:234;:::o;425:81:54:-;467:6;492:7;:5;:7::i;:::-;485:14;;425:81;:::o;3559:301:40:-;3646:10;3619:16;3638:19;;;:7;:19;;;;;;3671:20;;;3667:72;;3714:14;;-1:-1:-1;;;3714:14:40;;;;;;;;;;;3667:72;3757:10;3749:19;;;;:7;:19;;;;;;;;;:30;;;3795:58;;24579:25:61;;;24620:18;;;24613:34;;;3795:58:40;;24552:18:61;3795:58:40;;;;;;;3609:251;3559:301;:::o;5021:633:28:-;5136:13;5163:18;;5136:13;;;5163:18;5427:41;:5;5136:13;5427:26;:41::i;:::-;5482:47;:8;5512:16;5482:29;:47::i;:::-;5621:16;;;5605:1;5621:16;;;;;;;;;-1:-1:-1;;;5376:271:28;;;-1:-1:-1;5376:271:28;;-1:-1:-1;5543:13:28;;-1:-1:-1;5578:4:28;;-1:-1:-1;5605:1:28;-1:-1:-1;5621:16:28;-1:-1:-1;5376:271:28;-1:-1:-1;5021:633:28:o;5950:3214:34:-;6091:16;6308:22;6291:14;6308:22;-1:-1:-1;;;;;6378:23:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6347:54:34;-1:-1:-1;6411:21:34;6875:9;6411:21;6895:2133;6919:6;6915:1;:10;6895:2133;;;-1:-1:-1;;7303:10:34;;7298:15;;7342:63;7408:22;;7298:1;7408:25;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7342:91;-1:-1:-1;7447:38:34;;7488:26;;;;7342:91;7488:26;:::i;:::-;7447:67;;-1:-1:-1;7447:67:34;-1:-1:-1;7447:67:34;7629:15;;;:72;;-1:-1:-1;7662:32:34;;;;:21;:32;:::i;:::-;:39;;7648:10;:53;;7629:72;7625:133;;;7728:15;;-1:-1:-1;;;7728:15:34;;;;;;;;;;;7625:133;7892:9;7887:499;7911:10;7907:1;:14;7887:499;;;7962:409;7997:356;;;;;;;;8059:21;:28;;;7997:356;;;;8119:4;;8124:1;8119:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7997:356;;;:::i;:::-;;;;;8163:32;;;;:21;:32;:::i;:::-;8196:1;8163:35;;;;;;;:::i;:::-;;;;;;7997:356;;;;;;;;;;:::i;:::-;;;;;8234:30;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7997:356:34;;;;;8300:30;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7997:356:34;;;7962:13;:409::i;:::-;1489:1:33;1485:5;7887:499:34;;;-1:-1:-1;8458:29:34;8490:191;8515:28;;8490:191;8561:4;;8490:191;:::i;:::-;8583:30;;;;;;;;:::i;:::-;8631:14;8663:4;8490:7;:191::i;:::-;8826:13;;8458:223;;-1:-1:-1;8808:31:34;;;;:::i;:::-;;;8921:3;:8;;;8906:9;8916:1;8906:12;;;;;;;;:::i;:::-;;;;;;:23;;;;8988:3;:8;;;:15;8971:32;;;;6948:2080;;;;;;6931:15;6944:1;1489::33;1485:5;;1397:102;6931:15:34;6927:19;;6895:2133;;14800:112;14860:18;;:::i;:::-;14897:8;;;;:3;:8;;;;;;;;;14890:15;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14890:15:34;;;;;;;;;;-1:-1:-1;;;14890:15:34;;;;;;;;-1:-1:-1;;;14890:15:34;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14890:15:34;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14890:15:34;;;;;;;;;;;;;;;;;14897:8;14890:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14800:112;;;:::o;9481:359::-;9590:31;;;;;;;;9604:16;9590:31;:::i;:::-;:13;:31::i;:::-;9670:30;;;9698:1;9670:30;;;;;;;;;9632:35;;9670:30;;;;-1:-1:-1;;;;;;;;;;;;;;;;;9670:30:34;;;;;;;;;;;;;;-1:-1:-1;9632:68:34;-1:-1:-1;9710:31:34;;;;;;;9720:21;;;9710:31;:::i;:::-;:4;9715:1;9710:7;;;;;;;;:::i;:::-;;;;;;;;;;:31;9752:81;9760:23;;9785:4;9791:24;;;;;;;;:::i;:::-;9817:9;9828:4;9752:7;:81::i;13939:174::-;13995:6;14013:11;14027:7;:5;:7::i;:::-;14013:21;;14045:39;14061:10;14073:4;14079;14045:15;:39::i;14483:286::-;14550:6;14568:11;14582:7;:5;:7::i;:::-;14568:21;-1:-1:-1;14617:4:34;14600:14;14638:103;14662:6;14658:1;:10;14638:103;;;14705:25;14716:4;;14721:1;14716:7;;;;;;;:::i;:::-;;;;;;;14725:4;14705:10;:25::i;:::-;1489:1:33;1485:5;14638:103:34;;2395:106:40;2448:7;2474:20;:18;:20::i;2841:291:34:-;2978:31;;;3007:1;2978:31;;;;;;;;;2920:7;;;;2978:31;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2978:31:34;;-1:-1:-1;;2978:31:34;;;;;;;;;;-1:-1:-1;2939:70:34;-1:-1:-1;3029:12:34;;;;:7;:12;:::i;:::-;3019:22;;;:::i;:::-;:4;3024:1;3019:7;;;;;;;;:::i;:::-;;;;;;;;;;:22;3059:58;3067:14;;3083:4;3089:10;3101:9;3112:4;3059:7;:58::i;5277:988:40:-;5366:16;;;;-1:-1:-1;;;;;5366:38:40;;;;;:68;;;5427:7;:5;:7::i;:::-;-1:-1:-1;;;;;5408:26:40;:7;:16;;;-1:-1:-1;;;;;5408:26:40;;5366:68;5362:123;;;5457:17;;-1:-1:-1;;;5457:17:40;;;;;;;;;;;5362:123;5531:12;;;;;5582:17;;;;;5751:15;;;;5788:14;;5824:8;;5854:10;;;;-1:-1:-1;;;;;5886:24:40;;5495:33;5886:24;;;:7;:24;;;;;;:26;;5531:12;;5582:17;;5495:33;;5625:367;;1450:66;;5751:15;5788:14;5824:8;5495:33;5886:26;;;:::i;:::-;;;;-1:-1:-1;5934:16:40;;;;;5682:286;;;;;;26995:25:61;;;;-1:-1:-1;;;;;27056:32:61;;;27036:18;;;27029:60;;;;-1:-1:-1;27105:18:61;;27098:34;;;;27148:18;;;27141:34;;;;27191:19;;;27184:35;27235:19;;;27228:35;-1:-1:-1;;;;;27300:31:61;27279:19;;;27272:60;26967:19;;5682:286:40;;;;;;;;;;;;;5655:327;;;;;;5625:16;:367::i;:::-;5610:382;;6020:178;6074:7;:15;;;6107:4;6146:9;:11;;;6159:9;:11;;;6172:9;:11;;;6129:55;;;;;;;;;27524:19:61;;;27568:2;27559:12;;27552:28;;;;27636:3;27614:16;-1:-1:-1;;;;;;27610:36:61;27605:2;27596:12;;27589:58;27672:2;27663:12;;27343:338;6129:55:40;;;;;;;;;;;;;6020:36;:178::i;:::-;6002:257;;6230:18;;-1:-1:-1;;;6230:18:40;;;;;;;;;;;6002:257;5352:913;;;5277:988;:::o;19235:2157:34:-;19552:36;;-1:-1:-1;;;19552:36:34;;;;;1106:25:61;;;19423:7:34;;;;-1:-1:-1;;;;;19552:15:34;:25;;;;1079:18:61;;19552:36:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19552:36:34;;;;;;;;;;;;:::i;:::-;19602:16;;19517:71;;-1:-1:-1;19598:82:34;;19654:15;;-1:-1:-1;;;19654:15:34;;;;;;;;;;;19598:82;19707:11;;19690:14;19707:11;-1:-1:-1;;;;;19764:25:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;19728:61;;19799:23;19839:6;-1:-1:-1;;;;;19825:21:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19825:21:34;;19799:47;;19862:9;19857:1427;19881:6;19877:1;:10;19857:1427;;;19924:36;19963:4;19968:1;19963:7;;;;;;;;:::i;:::-;;;;;;;;;;;;20023:11;;19985:31;20019:16;;;:3;:16;;;;;;;20140:15;;19963:7;;-1:-1:-1;20019:16:34;20136:84;;20195:10;;-1:-1:-1;;;20195:10:34;;;;;;;;;;;20136:84;20332:9;20310:11;:18;;;:31;20306:92;;20368:15;;-1:-1:-1;;;20368:15:34;;;;;;;;;;;20306:92;20491:20;;;;-1:-1:-1;;;;;20491:31:34;;;:20;;:31;20487:91;;20549:14;;-1:-1:-1;;;20549:14:34;;;;;;;;;;;20487:91;20789:21;;;;-1:-1:-1;;;20789:21:34;;;;20784:81;;20837:13;;-1:-1:-1;;;20837:13:34;;;;;;;;;;;20784:81;20965:26;;;;-1:-1:-1;;;20965:26:34;;-1:-1:-1;;;;;20965:26:34;:31;20961:93;;21023:16;;-1:-1:-1;;;21023:16:34;;;;;;;;;;;20961:93;21096:7;:5;:7::i;:::-;21067:26;;;:36;;-1:-1:-1;;;;21067:36:34;;-1:-1:-1;;;;;;;;21067:36:34;;;;;;;;;;;;21118:29;;;;;;;;;;;;-1:-1:-1;21118:29:34;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21118:29:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21118:29:34;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21118:29:34;;;;;;21067:36;21118:29;;;;;;;;21067:26;;21118:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;21131:1;21118:15;;;;;;;;:::i;:::-;;;;;;:29;;;;21173:7;:13;;;21161:6;21168:1;21161:9;;;;;;;;:::i;:::-;;;;;;:25;;;;;21263:9;21241:7;-1:-1:-1;;;;;21206:67:34;21214:12;21227:1;21214:15;;;;;;;;:::i;:::-;;;;;;;:25;;;-1:-1:-1;;;;;21206:67:34;;21250:7;:11;;;21206:67;;;;1106:25:61;;1094:2;1079:18;;960:177;21206:67:34;;;;;;;;-1:-1:-1;;1489:1:33;1485:5;19857:1427:34;;;;21301:84;21322:12;21336;21350:6;21358:4;21364:14;21380:4;21301:20;:84::i;:::-;21294:91;19235:2157;-1:-1:-1;;;;;;;;;;19235:2157:34:o;512:140:54:-;586:12;;561:6;;-1:-1:-1;;;;;586:12:54;:28;:59;;-1:-1:-1;633:12:54;;-1:-1:-1;;;;;633:12:54;;425:81::o;586:59::-;-1:-1:-1;6499:15:40;;425:81:54:o;28257:368:34:-;-1:-1:-1;;;;;28408:29:34;;28344:61;28408:29;;;:20;:29;;;;;;;;28452:17;;;;;;;;;;;-1:-1:-1;;;;;28452:17:34;:22;28448:84;;28497:24;;-1:-1:-1;;;28497:24:34;;;;;;;;;;;28448:84;28542:17;;;;;;;;;;;;:24;;-1:-1:-1;;28542:24:34;-1:-1:-1;;;;;28542:24:34;;;;;;;;28582:36;;28542:24;;:17;;-1:-1:-1;;;;;28582:36:34;;;;;;28334:291;28257:368;;;:::o;3994:1151:40:-;4084:16;;;;-1:-1:-1;;;;;4084:38:40;;;;;:68;;;4145:7;:5;:7::i;:::-;-1:-1:-1;;;;;4126:26:40;:7;:16;;;-1:-1:-1;;;;;4126:26:40;;4084:68;4080:123;;;4175:17;;-1:-1:-1;;;4175:17:40;;;;;;;;;;;4080:123;4250:12;;;;;4301:17;;;;;4470:16;;;;;4508:14;;4544;;4580:19;;;;4621:14;;;;4657:11;;;;4700:9;;;;4690:20;;;;;;4732:10;;;;-1:-1:-1;;;;;4764:25:40;;4213:34;4764:25;;;:7;:25;;;;;;:27;;4250:12;;4301:17;;4213:34;;4344:527;;1123:66;;4621:14;4657:11;4690:20;4213:34;4764:27;;;:::i;:::-;;;;;4813:7;:16;;;4401:446;;;;;;;;;;;;;;;;;29360:25:61;;;-1:-1:-1;;;;;29459:15:61;;;29454:2;29439:18;;29432:43;29506:2;29491:18;;29484:34;;;;29554:15;;;;29549:2;29534:18;;29527:43;-1:-1:-1;;;;;29644:15:61;;;29638:3;29623:19;;29616:44;29704:14;;29697:22;29412:3;29676:19;;29669:51;29751:3;29736:19;;29729:35;29795:3;29780:19;;29773:35;29839:3;29824:19;;29817:35;;;;29883:3;29868:19;;29861:35;29933:16;29927:3;29912:19;;29905:45;29347:3;29332:19;;28942:1014;15861:2898:34;-1:-1:-1;;;;;;;;;;;;;;;;;16105:11:34;;-1:-1:-1;;;;;;;;;16088:14:34;-1:-1:-1;;;;;;;16191:6:34;-1:-1:-1;;;;;16177:21:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16177:21:34;-1:-1:-1;16166:8:34;;;:32;16324:36;;-1:-1:-1;;;16324:36:34;;;;;1106:25:61;;;16289:32:34;;16324:15;-1:-1:-1;;;;;16324:25:34;;;;1079:18:61;;16324:36:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16324:36:34;;;;;;;;;;;;:::i;:::-;16374:16;;16289:71;;-1:-1:-1;16370:82:34;;16426:15;;-1:-1:-1;;;16426:15:34;;;;;;;;;;;16370:82;16462:33;16516:6;-1:-1:-1;;;;;16498:25:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16462:61;;16533:23;16573:6;-1:-1:-1;;;;;16559:21:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16559:21:34;;16533:47;;16596:9;16591:2029;16615:6;16611:1;:10;16591:2029;;;16658:37;16698:4;16703:1;16698:7;;;;;;;;:::i;:::-;;;;;;;16658:47;;240:1:33;-1:-1:-1;;;;;16819:44:34;:7;:22;;;-1:-1:-1;;;;;16819:44:34;;;:81;;;;;16893:7;:5;:7::i;:::-;-1:-1:-1;;;;;16867:33:34;:7;:22;;;-1:-1:-1;;;;;16867:33:34;;;16819:81;16815:150;;;16927:23;;-1:-1:-1;;;16927:23:34;;;;;;;;;;;16815:150;17088:12;:22;;;17087:23;:44;;;;;17114:7;:17;;;17087:44;17083:103;;;17158:13;;-1:-1:-1;;;17158:13:34;;;;;;;;;;;17083:103;17200:30;17233:420;;;;;;;;138:1:33;17268:9:34;;17233:420;;;;17303:9;17233:420;;;;17376:7;:5;:7::i;:::-;-1:-1:-1;;;;;17233:420:34;;;;;17417:7;:22;;;-1:-1:-1;;;;;17233:420:34;;;;;17473:1;-1:-1:-1;;;;;17233:420:34;;;;;17338:7;:14;;;17233:420;;;;17503:7;:17;;;-1:-1:-1;;;;;17233:420:34;;;;;17548:8;-1:-1:-1;;;;;17233:420:34;;;;;17585:7;:17;;;17233:420;;;;;;17626:7;:12;;;17233:420;;;17200:453;;17779:11;17804;17818:1;17804:15;;17833:247;17870:26;17878:11;17891:4;17870:7;:26::i;:::-;138:1:33;17918:8:34;;;:3;:8;;;;;:12;17864:32;;-1:-1:-1;17914:77:34;17967:5;17914:77;18041:6;;17833:247;;;18093:21;;;:15;18129:8;;;:3;:8;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18129:22:34;;;-1:-1:-1;;;18129:22:34;-1:-1:-1;;;;18129:22:34;;;-1:-1:-1;;;18129:22:34;-1:-1:-1;;18129:22:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18129:22:34;;;-1:-1:-1;;;;;;18129:22:34;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;18129:22:34;-1:-1:-1;;;;;;18129:22:34;;;;;;;;;;;;;;;;;;;;;18093:11;;18129:8;:22;;;;;;;;:::i;:::-;-1:-1:-1;;;18170:14:34;;;;:27;18166:256;;18333:14;;;;15005:4;15028:8;;;:3;:8;;;;;:12;18309:99;;18379:10;;-1:-1:-1;;;18379:10:34;;;;;;;;;;;18309:99;18454:11;18436:12;18449:1;18436:15;;;;;;;;:::i;:::-;;;;;;:29;;;;18491:7;:13;;;18479:6;18486:1;18479:9;;;;;;;;:::i;:::-;;;;;;:25;;;;;18533:3;18519;:8;;;18528:1;18519:11;;;;;;;;:::i;:::-;;;;;;:17;;;;;18599:9;18584:8;-1:-1:-1;;;;;18556:53:34;18565:7;:17;;;-1:-1:-1;;;;;18556:53:34;;18594:3;18556:53;;;;1106:25:61;;1094:2;1079:18;;960:177;18556:53:34;;;;;;;;16644:1976;;;;16627:15;16640:1;1489::33;1485:5;;1397:102;16627:15:34;16623:19;;16591:2029;;;;18646:85;18667:12;18681;18695:6;18703:5;18710:14;18726:4;18646:20;:85::i;:::-;18630:101;;-1:-1:-1;18630:101:34;;15861:2898;-1:-1:-1;;;;;;;;;15861:2898:34:o;28818:701::-;28907:16;28935:21;28973:8;-1:-1:-1;;;;;28959:23:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28959:23:34;-1:-1:-1;29051:15:34;;28935:47;;-1:-1:-1;28993:20:34;;;29076:415;29100:13;29096:1;:17;29076:415;;;29150:28;29181:8;29190:1;29181:11;;;;;;;;:::i;:::-;;;;;;;29150:42;;29206:25;29234:11;:18;29206:46;;29271:9;29266:215;29290:17;29286:1;:21;29266:215;;;29369:11;29381:1;29369:14;;;;;;;;:::i;:::-;;;;;;;29348:4;29353:12;29348:18;;;;;;;;:::i;:::-;;;;;;;;;;:35;29434:14;;;;;1485:5:33;29266:215:34;;;;29136:355;;29119:15;29132:1;1489::33;1485:5;;1397:102;29119:15:34;29115:19;;29076:415;;;-1:-1:-1;29508:4:34;;28818:701;-1:-1:-1;;;;;28818:701:34:o;27831:225::-;27900:17;;;;:11;:17;;;;;;-1:-1:-1;;;;;27900:17:34;:22;27896:80;;27945:20;;-1:-1:-1;;;27945:20:34;;;;;;;;;;;27896:80;27986:17;;;;:11;:17;;;;;;:24;;-1:-1:-1;;27986:24:34;-1:-1:-1;;;;;27986:24:34;;;;;;;;28026:23;;27986:24;;:17;;28026:23;;27986:17;28026:23;27831:225;;:::o;447:696:26:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;-1:-1:-1;;;;;627:18:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:26;-1:-1:-1;604:41:26;-1:-1:-1;765:28:26;;;781:2;765:28;820:280;-1:-1:-1;;851:5:26;-1:-1:-1;;;985:2:26;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:26;820:280;1064:21;-1:-1:-1;1120:6:26;447:696;-1:-1:-1;;;447:696:26:o;3367:268:24:-;3461:13;1371:66;3490:47;;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3695:262:28;3748:7;3779:4;-1:-1:-1;;;;;3788:11:28;3771:28;;:63;;;;;3820:14;3803:13;:31;3771:63;3767:184;;;-1:-1:-1;3857:22:28;;3695:262::o;3767:184::-;3917:23;4054:81;;;1929:95;4054:81;;;35033:25:61;4077:11:28;35074:18:61;;;35067:34;;;;4090:14:28;35117:18:61;;;35110:34;4106:13:28;35160:18:61;;;35153:34;4129:4:28;35203:19:61;;;35196:61;4018:7:28;;35005:19:61;;4054:81:28;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;4768:165;4845:7;4871:55;4893:20;:18;:20::i;:::-;4915:10;8536:4:27;8530:11;-1:-1:-1;;;8554:23:27;;8606:4;8597:14;;8590:39;;;;8658:4;8649:14;;8642:34;8712:4;8697:20;;;8336:397;1014:366:29;1120:4;1137:17;1156:24;1184:33;1201:4;1207:9;1184:16;:33::i;:::-;1136:81;;-1:-1:-1;1136:81:29;-1:-1:-1;1256:26:29;1247:5;:35;;;;;;;;:::i;:::-;;:58;;;;;1299:6;-1:-1:-1;;;;;1286:19:29;:9;-1:-1:-1;;;;;1286:19:29;;1247:58;1246:127;;;;1322:51;1349:6;1357:4;1363:9;1322:26;:51::i;:::-;1227:146;1014:366;-1:-1:-1;;;;;;1014:366:29:o;24114:2238:34:-;24399:19;;24363:7;;24442:1;24432:11;;;24428:146;;24466:97;24486:12;24500;24513:1;24500:15;;;;;;;;:::i;:::-;;;;;;;24517:6;24524:1;24517:9;;;;;;;;:::i;:::-;;;;;;;24528:12;24542:14;24558:4;24466:19;:97::i;:::-;24459:104;;;;;24428:146;24611:21;;;;-1:-1:-1;;;;;24646:31:34;;24642:406;;24775:9;24770:165;24794:6;24790:1;:10;24770:165;;;24845:6;24852:1;24845:9;;;;;;;;:::i;:::-;;;;;;;24858:1;24845:14;24841:80;;24890:12;;-1:-1:-1;;;24890:12:34;;;;;;;;;;;24841:80;1489:1:33;1485:5;24770:165:34;;;;24953:4;24949:66;;;24977:23;24985:14;24977:7;:23::i;:::-;25036:1;25029:8;;;;;;24642:406;25058:22;25094;25119:8;-1:-1:-1;;;;;25119:18:34;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25094:45;;25155:9;25150:777;25174:6;25170:1;:10;25150:777;;;25217:13;25233:6;25240:1;25233:9;;;;;;;;:::i;:::-;;;;;;;25217:25;;25355:5;25364:1;25355:10;25351:57;;25385:8;;;25351:57;25427:17;25422:76;;25471:12;;-1:-1:-1;;;25471:12:34;;;;;;;;;;;25422:76;25614:14;25606:5;:22;25602:87;;;25655:19;;-1:-1:-1;;;25655:19:34;;;;;;;;;;;25602:87;25838:23;;;;;25879;;;;;25150:777;1489:1:33;1485:5;25150:777:34;;;;25941:12;25937:309;;;25974:67;;-1:-1:-1;;;25974:67:34;;-1:-1:-1;;;;;25974:20:34;;;;;26003:14;;25974:67;;26020:12;;26034:6;;25974:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25969:134;;26068:20;;-1:-1:-1;;;26068:20:34;;;;;;;;;;;25969:134;25937:309;;;26124:67;;-1:-1:-1;;;26124:67:34;;-1:-1:-1;;;;;26124:20:34;;;;;26153:14;;26124:67;;26170:12;;26184:6;;26124:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26119:127;;26214:21;;-1:-1:-1;;;26214:21:34;;;;;;;;;;;26119:127;26260:4;26256:58;;;26280:23;26288:14;26280:7;:23::i;:::-;-1:-1:-1;26331:14:34;24114:2238;-1:-1:-1;;;;;;;;;24114:2238:34:o;26563:562::-;26750:18;;;;;26790:21;;;;26833:20;;;;26875:16;;;;;26913:26;;;;26961:21;;;;27004:18;;;;27044:16;;;;26712:392;;26647:7;;26712:392;;26750:18;26790:21;26833:20;27044:16;27082:4;;26712:392;;:::i;:::-;;;;;;;;;;;;;26685:433;;;;;;26666:452;;26563:562;;;;:::o;10139:916:30:-;10192:7;;-1:-1:-1;;;10267:17:30;;10263:103;;-1:-1:-1;;;10304:17:30;;;-1:-1:-1;10349:2:30;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:30;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:30;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:30;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:30;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:30;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:30:o;2059:405:24:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2281:14;;;2292:2;2281:14;;;;;;;;;2143:30;;-1:-1:-1;2261:17:24;;2281:14;;;;;;;;;-1:-1:-1;;;2371:16:24;;;-1:-1:-1;2416:4:24;2407:14;;2400:28;;;;-1:-1:-1;2371:16:24;2059:405::o;2145:730:27:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:27;;-1:-1:-1;2822:35:27;2259:610;2145:730;;;;;:::o;1786:473:29:-;1929:4;1946:12;1960:19;1983:6;-1:-1:-1;;;;;1983:17:29;2037:34;;;2073:4;2079:9;2014:75;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2014:75:29;;;;;;;;;;;;;;-1:-1:-1;;;;;2014:75:29;-1:-1:-1;;;;;;2014:75:29;;;;;;;;;;1983:116;;;;2014:75;1983:116;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:154;;;;2117:7;:42;;;;;2157:2;2140:6;:13;:19;;2117:42;:134;;;;-1:-1:-1;2175:29:29;;-1:-1:-1;;;2216:34:29;2175:29;;;;;;;;;;;;:::i;:::-;:76;;1786:473;-1:-1:-1;;;;;;1786:473:29:o;21983:1538:34:-;22264:21;;;;22218:7;;-1:-1:-1;;;;;22299:31:34;;22295:309;;22427:10;;22423:68;;22464:12;;-1:-1:-1;;;22464:12:34;;;;;;;;;;;22423:68;22509:4;22505:66;;;22533:23;22541:14;22533:7;:23::i;:::-;22592:1;22585:8;;;;;22295:309;22708:10;;22704:449;;22739:8;-1:-1:-1;;;;;22739:18:34;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22734:79;;22786:12;;-1:-1:-1;;;22786:12:34;;;;;;;;;;;22734:79;22929:14;22921:5;:22;22917:87;;;22970:19;;-1:-1:-1;;;22970:19:34;;;;;;;;;;;22917:87;23123:5;23105:23;;;;22704:449;23167:12;23163:261;;;23200:44;;-1:-1:-1;;;23200:44:34;;-1:-1:-1;;;;;23200:15:34;;;;;23224:5;;23200:44;;23232:11;;23200:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23195:110;;23271:19;;-1:-1:-1;;;23271:19:34;;;;;;;;;;;23195:110;23163:261;;;23326:44;;-1:-1:-1;;;23326:44:34;;-1:-1:-1;;;;;23326:15:34;;;;;23350:5;;23326:44;;23358:11;;23326:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23321:103;;23393:20;;-1:-1:-1;;;23393:20:34;;;;;;;;;;;23321:103;23438:4;23434:58;;;23458:23;23466:14;23458:7;:23::i;:::-;-1:-1:-1;23509:5:34;;21983:1538;-1:-1:-1;;;;;;21983:1538:34:o;27280:415::-;27343:18;;27339:350;;27633:45;27641:10;27663:14;27633:29;:45::i;:::-;27280:415;:::o;2536:245:24:-;2597:7;2669:4;2633:40;;2696:2;2687:11;;2683:69;;;2721:20;;-1:-1:-1;;;2721:20:24;;;;;;;;;;;5009:1456:27;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:27;;-1:-1:-1;6123:30:27;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;36270:25:61;;;36343:4;36331:17;;36311:18;;;36304:45;;;;36365:18;;;36358:34;;;36408:18;;;36401:34;;;6276:24:27;;36242:19:61;;6276:24:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:27;;-1:-1:-1;;6276:24:27;;;-1:-1:-1;;;;;;;6314:20:27;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:27;;-1:-1:-1;5009:1456:27;;;;;;;;:::o;2647:312:22:-;2761:6;2736:21;:31;;2728:73;;;;-1:-1:-1;;;2728:73:22;;36648:2:61;2728:73:22;;;36630:21:61;36687:2;36667:18;;;36660:30;36726:31;36706:18;;;36699:59;36775:18;;2728:73:22;;;;;;;;;2813:12;2831:9;-1:-1:-1;;;;;2831:14:22;2853:6;2831:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;-1:-1:-1;;;2874:78:22;;37216:2:61;2874:78:22;;;37198:21:61;37255:2;37235:18;;;37228:30;37294:34;37274:18;;;37267:62;37365:28;37345:18;;;37338:56;37411:19;;2874:78:22;37014:422:61;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:407:61:-;117:8;127:6;181:3;174:4;166:6;162:17;158:27;148:55;;199:1;196;189:12;148:55;-1:-1:-1;222:20:61;;-1:-1:-1;;;;;254:30:61;;251:50;;;297:1;294;287:12;251:50;334:4;326:6;322:17;310:29;;394:3;387:4;377:6;374:1;370:14;362:6;358:27;354:38;351:47;348:67;;;411:1;408;401:12;426:529;564:6;572;625:2;613:9;604:7;600:23;596:32;593:52;;;641:1;638;631:12;593:52;681:9;668:23;-1:-1:-1;;;;;706:6:61;703:30;700:50;;;746:1;743;736:12;700:50;785:110;887:7;878:6;867:9;863:22;785:110;:::i;:::-;914:8;;759:136;;-1:-1:-1;426:529:61;-1:-1:-1;;;;426:529:61:o;1936:250::-;2021:1;2031:113;2045:6;2042:1;2039:13;2031:113;;;2121:11;;;2115:18;2102:11;;;2095:39;2067:2;2060:10;2031:113;;;-1:-1:-1;;2178:1:61;2160:16;;2153:27;1936:250::o;2191:271::-;2233:3;2271:5;2265:12;2298:6;2293:3;2286:19;2314:76;2383:6;2376:4;2371:3;2367:14;2360:4;2353:5;2349:16;2314:76;:::i;:::-;2444:2;2423:15;-1:-1:-1;;2419:29:61;2410:39;;;;2451:4;2406:50;;2191:271;-1:-1:-1;;2191:271:61:o;2467:220::-;2616:2;2605:9;2598:21;2579:4;2636:45;2677:2;2666:9;2662:18;2654:6;2636:45;:::i;:::-;2628:53;2467:220;-1:-1:-1;;;2467:220:61:o;2692:131::-;-1:-1:-1;;;;;2767:31:61;;2757:42;;2747:70;;2813:1;2810;2803:12;2828:134;2896:20;;2925:31;2896:20;2925:31;:::i;:::-;2828:134;;;:::o;2967:247::-;3026:6;3079:2;3067:9;3058:7;3054:23;3050:32;3047:52;;;3095:1;3092;3085:12;3047:52;3134:9;3121:23;3153:31;3178:5;3153:31;:::i;3401:408::-;3508:6;3561:2;3549:9;3540:7;3536:23;3532:32;3529:52;;;3577:1;3574;3567:12;3529:52;3617:9;3604:23;-1:-1:-1;;;;;3642:6:61;3639:30;3636:50;;;3682:1;3679;3672:12;3636:50;3705:22;;3761:3;3743:16;;;3739:26;3736:46;;;3778:1;3775;3768:12;4340:632;4511:2;4563:21;;;4633:13;;4536:18;;;4655:22;;;4482:4;;4511:2;4734:15;;;;4708:2;4693:18;;;4482:4;4777:169;4791:6;4788:1;4785:13;4777:169;;;4852:13;;4840:26;;4921:15;;;;4886:12;;;;4813:1;4806:9;4777:169;;;-1:-1:-1;4963:3:61;;4340:632;-1:-1:-1;;;;;;4340:632:61:o;4977:204::-;5074:6;5127:2;5115:9;5106:7;5102:23;5098:32;5095:52;;;5143:1;5140;5133:12;5095:52;-1:-1:-1;5166:9:61;4977:204;-1:-1:-1;4977:204:61:o;5711:180::-;5770:6;5823:2;5811:9;5802:7;5798:23;5794:32;5791:52;;;5839:1;5836;5829:12;5791:52;-1:-1:-1;5862:23:61;;5711:180;-1:-1:-1;5711:180:61:o;6081:171::-;6148:20;;-1:-1:-1;;;;;6197:30:61;;6187:41;;6177:69;;6242:1;6239;6232:12;6257:184;6315:6;6368:2;6356:9;6347:7;6343:23;6339:32;6336:52;;;6384:1;6381;6374:12;6336:52;6407:28;6425:9;6407:28;:::i;6555:435::-;6608:3;6646:5;6640:12;6673:6;6668:3;6661:19;6699:4;6728:2;6723:3;6719:12;6712:19;;6765:2;6758:5;6754:14;6786:1;6796:169;6810:6;6807:1;6804:13;6796:169;;;6871:13;;6859:26;;6905:12;;;;6940:15;;;;6832:1;6825:9;6796:169;;;-1:-1:-1;6981:3:61;;6555:435;-1:-1:-1;;;;;6555:435:61:o;6995:920::-;7401:3;7396;7392:13;7384:6;7380:26;7369:9;7362:45;7443:3;7438:2;7427:9;7423:18;7416:31;7343:4;7470:46;7511:3;7500:9;7496:19;7488:6;7470:46;:::i;:::-;7564:9;7556:6;7552:22;7547:2;7536:9;7532:18;7525:50;7598:33;7624:6;7616;7598:33;:::i;:::-;7662:2;7647:18;;7640:34;;;-1:-1:-1;;;;;7711:32:61;;7705:3;7690:19;;7683:61;7731:3;7760:19;;7753:35;;;7825:22;;;7819:3;7804:19;;7797:51;7584:47;-1:-1:-1;7865:44:61;7584:47;7894:6;7865:44;:::i;8551:1102::-;8605:3;8633:6;8666:5;8660:12;8655:3;8648:25;8722:4;8715:5;8711:16;8705:23;8698:4;8693:3;8689:14;8682:47;8775:4;8768:5;8764:16;8758:23;8790:47;8831:4;8826:3;8822:14;8808:12;-1:-1:-1;;;;;1689:30:61;1677:43;;1624:102;8790:47;;8885:4;8878:5;8874:16;8868:23;8900:49;8943:4;8938:3;8934:14;8918;-1:-1:-1;;;;;1689:30:61;1677:43;;1624:102;8900:49;;8997:4;8990:5;8986:16;8980:23;9012:49;9055:4;9050:3;9046:14;9030;-1:-1:-1;;;;;1689:30:61;1677:43;;1624:102;9012:49;;9110:4;9103:5;9099:16;9093:23;9086:4;9081:3;9077:14;9070:47;9165:4;9158:5;9154:16;9148:23;9180:50;9224:4;9219:3;9215:14;9199;-1:-1:-1;;;;;6512:31:61;6500:44;;6446:104;9180:50;;9278:4;9271:5;9267:16;9261:23;9293:50;9337:4;9332:3;9328:14;9312;-1:-1:-1;;;;;6512:31:61;6500:44;;6446:104;9293:50;-1:-1:-1;9362:6:61;9405:14;;;9399:21;8525:13;8518:21;9461:12;;;8506:34;9493:6;9536:14;;;9530:21;9567:12;;;9560:24;;;9600:47;9634:12;;;9530:21;9600:47;:::i;9658:272::-;9847:2;9836:9;9829:21;9810:4;9867:57;9920:2;9909:9;9905:18;9897:6;9867:57;:::i;9935:214::-;10041:6;10094:3;10082:9;10073:7;10069:23;10065:33;10062:53;;;10111:1;10108;10101:12;10154:315;10222:6;10230;10283:2;10271:9;10262:7;10258:23;10254:32;10251:52;;;10299:1;10296;10289:12;10251:52;10338:9;10325:23;10357:31;10382:5;10357:31;:::i;:::-;10407:5;10459:2;10444:18;;;;10431:32;;-1:-1:-1;;;10154:315:61:o;10899:398::-;10997:6;11050:2;11038:9;11029:7;11025:23;11021:32;11018:52;;;11066:1;11063;11056:12;11018:52;11106:9;11093:23;-1:-1:-1;;;;;11131:6:61;11128:30;11125:50;;;11171:1;11168;11161:12;11125:50;11194:22;;11250:2;11232:16;;;11228:25;11225:45;;;11266:1;11263;11256:12;11302:127;11363:10;11358:3;11354:20;11351:1;11344:31;11394:4;11391:1;11384:15;11418:4;11415:1;11408:15;11434:350;11552:4;11610:11;11597:25;11704:3;11700:8;11689;11673:14;11669:29;11665:44;11645:18;11641:69;11631:97;;11724:1;11721;11714:12;11631:97;11745:33;;;;;11434:350;-1:-1:-1;;11434:350:61:o;11789:127::-;11850:10;11845:3;11841:20;11838:1;11831:31;11881:4;11878:1;11871:15;11905:4;11902:1;11895:15;11921:253;11993:2;11987:9;12035:4;12023:17;;-1:-1:-1;;;;;12055:34:61;;12091:22;;;12052:62;12049:88;;;12117:18;;:::i;:::-;12153:2;12146:22;11921:253;:::o;12179:::-;12251:2;12245:9;12293:4;12281:17;;-1:-1:-1;;;;;12313:34:61;;12349:22;;;12310:62;12307:88;;;12375:18;;:::i;12437:253::-;12509:2;12503:9;12551:4;12539:17;;-1:-1:-1;;;;;12571:34:61;;12607:22;;;12568:62;12565:88;;;12633:18;;:::i;12695:275::-;12766:2;12760:9;12831:2;12812:13;;-1:-1:-1;;12808:27:61;12796:40;;-1:-1:-1;;;;;12851:34:61;;12887:22;;;12848:62;12845:88;;;12913:18;;:::i;:::-;12949:2;12942:22;12695:275;;-1:-1:-1;12695:275:61:o;12975:204::-;13056:4;-1:-1:-1;;;;;13081:6:61;13078:30;13075:56;;;13111:18;;:::i;:::-;-1:-1:-1;13156:1:61;13152:14;13168:4;13148:25;;12975:204::o;13184:490::-;13252:5;13300:4;13288:9;13283:3;13279:19;13275:30;13272:50;;;13318:1;13315;13308:12;13272:50;13351:4;13345:11;13395:4;13387:6;13383:17;13466:6;13454:10;13451:22;-1:-1:-1;;;;;13418:10:61;13415:34;13412:62;13409:88;;;13477:18;;:::i;:::-;13513:4;13506:24;13578:23;;13563:39;;13663:2;13648:18;;;13635:32;13618:15;;;13611:57;;;;-1:-1:-1;13548:6:61;13184:490;-1:-1:-1;13184:490:61:o;13679:639::-;13735:5;13783:4;13771:9;13766:3;13762:19;13758:30;13755:50;;;13801:1;13798;13791:12;13755:50;13834:2;13828:9;13876:4;13868:6;13864:17;13947:6;13935:10;13932:22;-1:-1:-1;;;;;13899:10:61;13896:34;13893:62;13890:88;;;13958:18;;:::i;:::-;13994:2;13987:22;14027:6;-1:-1:-1;14027:6:61;14057:23;;14124:4;14111:18;;14099:31;;14089:59;;14144:1;14141;14134:12;14089:59;14172:7;14164:6;14157:23;;14241:2;14230:9;14226:18;14213:32;14208:2;14200:6;14196:15;14189:57;14307:2;14296:9;14292:18;14279:32;14274:2;14266:6;14262:15;14255:57;;13679:639;;;;:::o;14323:736::-;14386:5;14439:3;14432:4;14424:6;14420:17;14416:27;14406:55;;14457:1;14454;14447:12;14406:55;14493:6;14480:20;14519:4;14543:81;14559:64;14620:2;14559:64;:::i;:::-;14543:81;:::i;:::-;14658:15;;;14720:4;14763:11;;;14751:24;;14747:33;;;14689:12;;;;14646:3;14792:15;;;14789:35;;;14820:1;14817;14810:12;14789:35;14856:2;14848:6;14844:15;14868:162;14884:6;14879:3;14876:15;14868:162;;;14950:37;14983:3;14978;14950:37;:::i;:::-;14938:50;;15008:12;;;;14901;;14868:162;;;-1:-1:-1;15048:5:61;;14323:736;-1:-1:-1;;;;;;;14323:736:61:o;15064:1556::-;15216:9;15275:4;15267:5;15251:14;15247:26;15243:37;15240:57;;;15293:1;15290;15283:12;15240:57;15321:22;;:::i;:::-;15381:5;15368:19;15359:7;15352:36;15407:2;15456;15449:5;15445:14;15432:28;-1:-1:-1;;;;;15520:2:61;15512:6;15509:14;15506:34;;;15536:1;15533;15526:12;15506:34;15559:18;;;;15615:14;15608:4;15600:13;;15596:34;15586:62;;15644:1;15641;15634:12;15586:62;15680:2;15667:16;15703:81;15719:64;15780:2;15719:64;:::i;15703:81::-;15818:15;;;15900:1;15896:10;;;;15888:19;;15884:28;;;15849:12;;;;15935:14;15924:26;;15921:46;;;15963:1;15960;15953:12;15921:46;15987:11;;;;16007:187;16023:6;16018:3;16015:15;16007:187;;;16091:60;16136:14;16131:3;16091:60;:::i;:::-;16086:3;16079:73;16181:2;16176:3;16172:12;16165:19;;16049:4;16044:3;16040:14;16033:21;;16007:187;;;16228:5;16223:2;16214:7;16210:16;16203:31;;;;16283:4;16276:5;16272:16;16259:30;16243:46;;16314:2;16304:8;16301:16;16298:36;;;16330:1;16327;16320:12;16298:36;;;16370:75;16430:14;16419:8;16412:5;16408:20;16370:75;:::i;:::-;16363:4;16354:7;16350:18;16343:103;;16480:34;16510:2;16503:5;16499:14;16480:34;:::i;:::-;16475:2;16466:7;16462:16;16455:60;16550:34;16579:3;16572:5;16568:15;16550:34;:::i;:::-;16544:3;16531:17;;16524:61;16535:7;15064:1556;-1:-1:-1;;15064:1556:61:o;16625:127::-;16686:10;16681:3;16677:20;16674:1;16667:31;16717:4;16714:1;16707:15;16741:4;16738:1;16731:15;16757:128;16824:9;;;16845:11;;;16842:37;;;16859:18;;:::i;16890:380::-;16969:1;16965:12;;;;17012;;;17033:61;;17087:4;17079:6;17075:17;17065:27;;17033:61;17140:2;17132:6;17129:14;17109:18;17106:38;17103:161;;17186:10;17181:3;17177:20;17174:1;17167:31;17221:4;17218:1;17211:15;17249:4;17246:1;17239:15;17275:118;17361:5;17354:13;17347:21;17340:5;17337:32;17327:60;;17383:1;17380;17373:12;17398:186;17446:4;-1:-1:-1;;;;;17471:6:61;17468:30;17465:56;;;17501:18;;:::i;:::-;-1:-1:-1;17567:2:61;17546:15;-1:-1:-1;;17542:29:61;17573:4;17538:40;;17398:186::o;17589:1204::-;17658:5;17706:4;17694:9;17689:3;17685:19;17681:30;17678:50;;;17724:1;17721;17714:12;17678:50;17746:22;;:::i;:::-;17737:31;;17805:9;17792:23;17824:33;17849:7;17824:33;:::i;:::-;17866:22;;17907:2;17941:37;17959:18;;;17941:37;:::i;:::-;17936:2;17929:5;17925:14;17918:61;18031:2;18020:9;18016:18;18003:32;18044:30;18066:7;18044:30;:::i;:::-;18101:2;18090:14;;18083:31;18174:2;18159:18;;;18146:32;18130:14;;;18123:56;18230:3;18215:19;;18202:33;-1:-1:-1;;;;;18247:30:61;;18244:50;;;18290:1;18287;18280:12;18244:50;18313:22;;18366:4;18358:13;;18354:23;-1:-1:-1;18344:51:61;;18391:1;18388;18381:12;18344:51;18427:2;18414:16;18452:48;18468:31;18496:2;18468:31;:::i;18452:48::-;18523:2;18516:5;18509:17;18563:3;18558:2;18553;18549;18545:11;18541:20;18538:29;18535:49;;;18580:1;18577;18570:12;18535:49;18635:2;18630;18626;18622:11;18617:2;18610:5;18606:14;18593:45;18679:1;18674:2;18669;18662:5;18658:14;18654:23;18647:34;18714:5;18708:3;18701:5;18697:15;18690:30;;;;;18781:3;18770:9;18766:19;18753:33;18747:3;18740:5;18736:15;18729:58;17589:1204;;;;:::o;18798:877::-;18942:9;19001:4;18993:5;18977:14;18973:26;18969:37;18966:57;;;19019:1;19016;19009:12;18966:57;19047:22;;:::i;:::-;19107:5;19094:19;19085:7;19078:36;19161:2;19154:5;19150:14;19137:28;-1:-1:-1;;;;;19180:6:61;19177:30;19174:50;;;19220:1;19217;19210:12;19174:50;19258:76;19319:14;19310:6;19303:5;19299:18;19258:76;:::i;:::-;19253:2;19244:7;19240:16;19233:102;;19369:59;19413:14;19408:2;19401:5;19397:14;19369:59;:::i;:::-;19364:2;19355:7;19351:16;19344:85;19477:4;19470:5;19466:16;19453:30;19492:33;19517:7;19492:33;:::i;:::-;19554:4;19541:18;;19534:35;19605:34;19634:3;19623:15;;19605:34;:::i;19680:341::-;19789:4;19847:11;19834:25;19941:3;19937:8;19926;19910:14;19906:29;19902:44;19882:18;19878:69;19868:97;;19961:1;19958;19951:12;20026:240;20160:9;20197:63;20245:14;20238:5;20197:63;:::i;20271:341::-;20381:4;20439:11;20426:25;20533:2;20529:7;20518:8;20502:14;20498:29;20494:43;20474:18;20470:68;20460:96;;20552:1;20549;20542:12;20617:588;20753:4;20759:6;20819:11;20806:25;20913:2;20909:7;20898:8;20882:14;20878:29;20874:43;20854:18;20850:68;20840:96;;20932:1;20929;20922:12;20840:96;20959:33;;21011:20;;;-1:-1:-1;;;;;;21043:30:61;;21040:50;;;21086:1;21083;21076:12;21040:50;21119:4;21107:17;;-1:-1:-1;21170:1:61;21166:14;;;21150;21146:35;21136:46;;21133:66;;;21195:1;21192;21185:12;21210:988;21410:9;21445:85;21461:68;21522:6;21461:68;:::i;21445:85::-;21552:3;21576:6;21571:3;21564:19;21602:4;21631:2;21626:3;21622:12;21615:19;;21675:6;21672:1;21668:14;21661:5;21657:26;21706:14;21698:6;21695:26;21692:46;;;21734:1;21731;21724:12;21692:46;21758:5;21772:393;21788:6;21783:3;21780:15;21772:393;;;21874:3;21861:17;-1:-1:-1;;;;;21897:11:61;21894:35;21891:125;;;21970:1;21999:2;21995;21988:14;21891:125;22041:81;22107:14;22093:11;22086:5;22082:23;22041:81;:::i;:::-;22029:94;;-1:-1:-1;22143:12:61;;;;21805;;21772:393;;;-1:-1:-1;22187:5:61;;21210:988;-1:-1:-1;;;;;;21210:988:61:o;22203:256::-;22302:6;22355:2;22343:9;22334:7;22330:23;22326:32;22323:52;;;22371:1;22368;22361:12;22323:52;22394:59;22445:7;22434:9;22394:59;:::i;22809:587::-;22944:4;22950:6;23010:11;22997:25;23104:2;23100:7;23089:8;23073:14;23069:29;23065:43;23045:18;23041:68;23031:96;;23123:1;23120;23113:12;23031:96;23150:33;;23202:20;;;-1:-1:-1;;;;;;23234:30:61;;23231:50;;;23277:1;23274;23267:12;23231:50;23310:4;23298:17;;-1:-1:-1;23361:1:61;23357:14;;;23341;23337:35;23327:46;;23324:66;;;23386:1;23383;23376:12;23401:999;23830:3;23868:6;23862:13;23884:66;23943:6;23938:3;23931:4;23923:6;23919:17;23884:66;:::i;:::-;23981:6;23976:3;23972:16;23959:29;;-1:-1:-1;;;24033:2:61;24026:5;24019:17;24067:6;24061:13;24083:78;24152:8;24148:1;24141:5;24137:13;24130:4;24122:6;24118:17;24083:78;:::i;:::-;24224:1;24180:20;;24216:10;;;24209:22;24256:13;;24278:75;24256:13;24340:1;24332:10;;24325:4;24313:17;;24278:75;:::i;:::-;24373:17;24392:1;24369:25;;23401:999;-1:-1:-1;;;;;23401:999:61:o;25014:578::-;25137:4;25143:6;25203:11;25190:25;25297:2;25293:7;25282:8;25266:14;25262:29;25258:43;25238:18;25234:68;25224:96;;25316:1;25313;25306:12;25224:96;25343:33;;25395:20;;;-1:-1:-1;;;;;;25427:30:61;;25424:50;;;25470:1;25467;25460:12;25424:50;25503:4;25491:17;;-1:-1:-1;25562:4:61;25550:17;;25534:14;25530:38;25520:49;;25517:69;;;25582:1;25579;25572:12;25597:232;25684:6;25737:2;25725:9;25716:7;25712:23;25708:32;25705:52;;;25753:1;25750;25743:12;25705:52;25776:47;25815:7;25804:9;25776:47;:::i;25834:703::-;25938:6;25991:3;25979:9;25970:7;25966:23;25962:33;25959:53;;;26008:1;26005;25998:12;25959:53;26034:22;;:::i;:::-;26092:9;26079:23;26072:5;26065:38;26135:68;26195:7;26190:2;26179:9;26175:18;26135:68;:::i;:::-;26130:2;26123:5;26119:14;26112:92;26238:56;26286:7;26281:2;26270:9;26266:18;26238:56;:::i;:::-;26231:4;26224:5;26220:16;26213:82;26347:3;26336:9;26332:19;26319:33;26361;26386:7;26361:33;:::i;:::-;26421:2;26410:14;;26403:31;26468:38;26501:3;26486:19;;26468:38;:::i;:::-;26461:4;26450:16;;26443:64;26454:5;25834:703;-1:-1:-1;;;25834:703:61:o;26542:135::-;26581:3;26602:17;;;26599:43;;26622:18;;:::i;:::-;-1:-1:-1;26669:1:61;26658:13;;26542:135::o;27686:1251::-;27787:6;27818:2;27861;27849:9;27840:7;27836:23;27832:32;27829:52;;;27877:1;27874;27867:12;27829:52;27910:9;27904:16;-1:-1:-1;;;;;27980:2:61;27972:6;27969:14;27966:34;;;27996:1;27993;27986:12;27966:34;28019:22;;;;28075:4;28057:16;;;28053:27;28050:47;;;28093:1;28090;28083:12;28050:47;28119:22;;:::i;:::-;28170:2;28164:9;28157:5;28150:24;28212:2;28208;28204:11;28198:18;28225:33;28250:7;28225:33;:::i;:::-;28274:14;;;28267:31;28336:2;28328:11;;28322:18;28349:30;28322:18;28349:30;:::i;:::-;28406:2;28395:14;;28388:31;28458:2;28450:11;;28444:18;28474:16;;;28471:36;;;28503:1;28500;28493:12;28471:36;28534:8;28530:2;28526:17;28516:27;;;28581:7;28574:4;28570:2;28566:13;28562:27;28552:55;;28603:1;28600;28593:12;28552:55;28632:2;28626:9;28616:19;;28657:48;28673:31;28701:2;28673:31;:::i;28657:48::-;28728:2;28721:5;28714:17;28768:7;28763:2;28758;28754;28750:11;28746:20;28743:33;28740:53;;;28789:1;28786;28779:12;28740:53;28802:67;28866:2;28861;28854:5;28850:14;28845:2;28841;28837:11;28802:67;:::i;:::-;28896:2;28885:14;;28878:29;28889:5;27686:1251;-1:-1:-1;;;;;;27686:1251:61:o;30086:544::-;30187:2;30182:3;30179:11;30176:448;;;30223:1;30248:5;30244:2;30237:17;30293:4;30289:2;30279:19;30363:2;30351:10;30347:19;30344:1;30340:27;30334:4;30330:38;30399:4;30387:10;30384:20;30381:47;;;-1:-1:-1;30422:4:61;30381:47;30477:2;30472:3;30468:12;30465:1;30461:20;30455:4;30451:31;30441:41;;30532:82;30550:2;30543:5;30540:13;30532:82;;;30595:17;;;30576:1;30565:13;30532:82;;;30536:3;;;30086:544;;;:::o;30806:1348::-;30930:3;30924:10;-1:-1:-1;;;;;30949:6:61;30946:30;30943:56;;;30979:18;;:::i;:::-;31008:96;31097:6;31057:38;31089:4;31083:11;31057:38;:::i;:::-;31051:4;31008:96;:::i;:::-;31159:4;;31223:2;31212:14;;31240:1;31235:662;;;;31941:1;31958:6;31955:89;;;-1:-1:-1;32010:19:61;;;32004:26;31955:89;-1:-1:-1;;30763:1:61;30759:11;;;30755:24;30751:29;30741:40;30787:1;30783:11;;;30738:57;32057:81;;31205:943;;31235:662;30033:1;30026:14;;;30070:4;30057:18;;-1:-1:-1;;31271:20:61;;;31388:236;31402:7;31399:1;31396:14;31388:236;;;31491:19;;;31485:26;31470:42;;31583:27;;;;31551:1;31539:14;;;;31418:19;;31388:236;;;31392:3;31652:6;31643:7;31640:19;31637:201;;;31713:19;;;31707:26;-1:-1:-1;;31796:1:61;31792:14;;;31808:3;31788:24;31784:37;31780:42;31765:58;31750:74;;31637:201;-1:-1:-1;;;;;31884:1:61;31868:14;;;31864:22;31851:36;;-1:-1:-1;30806:1348:61:o;32291:127::-;32352:10;32347:3;32343:20;32340:1;32333:31;32383:4;32380:1;32373:15;32407:4;32404:1;32397:15;32423:245;32490:6;32543:2;32531:9;32522:7;32518:23;32514:32;32511:52;;;32559:1;32556;32549:12;32511:52;32591:9;32585:16;32610:28;32632:5;32610:28;:::i;32673:1032::-;32953:4;33001:2;32990:9;32986:18;33031:2;33020:9;33013:21;33054:6;33089;33083:13;33120:6;33112;33105:22;33158:2;33147:9;33143:18;33136:25;;33220:2;33210:6;33207:1;33203:14;33192:9;33188:30;33184:39;33170:53;;33242:4;33281:2;33273:6;33269:15;33302:1;33312:267;33326:6;33323:1;33320:13;33312:267;;;33419:2;33415:7;33403:9;33395:6;33391:22;33387:36;33382:3;33375:49;33447:52;33492:6;33483;33477:13;33447:52;:::i;:::-;33437:62;-1:-1:-1;33557:12:61;;;;33522:15;;;;33348:1;33341:9;33312:267;;;33316:3;;33627:9;33619:6;33615:22;33610:2;33599:9;33595:18;33588:50;;;;33655:44;33692:6;33684;33655:44;:::i;:::-;33647:52;32673:1032;-1:-1:-1;;;;;32673:1032:61:o;33710:1059::-;34081:6;34076:3;34069:19;34051:3;34111:26;34107:31;34189:2;34180:6;34176:2;34172:15;34168:24;34163:2;34158:3;34154:12;34147:46;34244:2;34235:6;34231:2;34227:15;34223:24;34218:2;34213:3;34209:12;34202:46;;-1:-1:-1;;;;;34271:3:61;34267:28;34347:2;34338:6;34333:3;34329:16;34325:25;34320:2;34315:3;34311:12;34304:47;34403:2;34394:6;34389:3;34385:16;34381:25;34376:2;34371:3;34367:12;34360:47;;34460:6;34453:14;34446:22;34441:3;34437:32;34432:2;34427:3;34423:12;34416:54;34500:6;34495:2;34490:3;34486:12;34479:28;34536:6;34530:13;34552:74;34619:6;34613:3;34608;34604:13;34599:2;34591:6;34587:15;34552:74;:::i;:::-;34717:3;34695:16;;;;-1:-1:-1;;;;;;34691:43:61;34685:3;34645:16;;;;34677:12;;;34670:65;;;;34759:3;34751:12;;33710:1059;-1:-1:-1;;;;;;;;;33710:1059:61:o;35268:289::-;35443:6;35432:9;35425:25;35486:2;35481;35470:9;35466:18;35459:30;35406:4;35506:45;35547:2;35536:9;35532:18;35524:6;35506:45;:::i;:::-;35498:53;35268:289;-1:-1:-1;;;;35268:289:61:o;35562:287::-;35691:3;35729:6;35723:13;35745:66;35804:6;35799:3;35792:4;35784:6;35780:17;35745:66;:::i;35854:184::-;35924:6;35977:2;35965:9;35956:7;35952:23;35948:32;35945:52;;;35993:1;35990;35983:12;35945:52;-1:-1:-1;36016:16:61;;35854:184;-1:-1:-1;35854:184:61:o",
    "linkReferences": {},
    "immutableReferences": {
      "41922": [
        {
          "start": 9010,
          "length": 32
        }
      ],
      "41924": [
        {
          "start": 8968,
          "length": 32
        }
      ],
      "41926": [
        {
          "start": 8926,
          "length": 32
        }
      ],
      "41928": [
        {
          "start": 9091,
          "length": 32
        }
      ],
      "41930": [
        {
          "start": 9131,
          "length": 32
        }
      ],
      "41933": [
        {
          "start": 3238,
          "length": 32
        }
      ],
      "41936": [
        {
          "start": 3280,
          "length": 32
        }
      ],
      "43349": [
        {
          "start": 1383,
          "length": 32
        },
        {
          "start": 5137,
          "length": 32
        },
        {
          "start": 6972,
          "length": 32
        }
      ],
      "46247": [
        {
          "start": 2925,
          "length": 32
        }
      ],
      "46249": [
        {
          "start": 2966,
          "length": 32
        }
      ],
      "46251": [
        {
          "start": 3007,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))": "f17325e7",
    "attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))": "3c042715",
    "eip712Domain()": "84b0196e",
    "getAttestTypeHash()": "12b11a17",
    "getAttestation(bytes32)": "a3112a64",
    "getDomainSeparator()": "ed24911d",
    "getName()": "17d7de7c",
    "getNonce(address)": "2d0335ab",
    "getRevokeOffchain(address,bytes32)": "b469318d",
    "getRevokeTypeHash()": "b83010d3",
    "getSchemaRegistry()": "f10b5cc8",
    "getTime()": "557ed1ba",
    "getTimestamp(bytes32)": "d45c4435",
    "increaseNonce(uint256)": "79f7573a",
    "isAttestationValid(bytes32)": "e30bb563",
    "multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])": "44adc90e",
    "multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])": "95411525",
    "multiRevoke((bytes32,(bytes32,uint256)[])[])": "4cb7e9e5",
    "multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])": "0eabf660",
    "multiRevokeOffchain(bytes32[])": "13893f61",
    "multiTimestamp(bytes32[])": "e71ff365",
    "revoke((bytes32,(bytes32,uint256)))": "46926267",
    "revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))": "a6d4dbc7",
    "revokeOffchain(bytes32)": "cf190f34",
    "setTime(uint64)": "7e4e1292",
    "timestamp(bytes32)": "4d003070",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"registry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyRevoked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyRevokedOffchain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyTimestamped\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAttestation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAttestations\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExpirationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOffset\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRegistry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRevocation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRevocations\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSchema\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVerifier\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Irrevocable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongSchema\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"name\":\"Attested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNonce\",\"type\":\"uint256\"}],\"name\":\"NonceIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"name\":\"Revoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"RevokedOffchain\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"Timestamped\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct AttestationRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData\",\"name\":\"data\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature\",\"name\":\"signature\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct DelegatedAttestationRequest\",\"name\":\"delegatedRequest\",\"type\":\"tuple\"}],\"name\":\"attestByDelegation\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAttestTypeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getAttestation\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"getRevokeOffchain\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRevokeTypeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchemaRegistry\",\"outputs\":[{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNonce\",\"type\":\"uint256\"}],\"name\":\"increaseNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"isAttestationValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"internalType\":\"struct MultiAttestationRequest[]\",\"name\":\"multiRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct MultiDelegatedAttestationRequest[]\",\"name\":\"multiDelegatedRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiAttestByDelegation\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"internalType\":\"struct MultiRevocationRequest[]\",\"name\":\"multiRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiRevoke\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct MultiDelegatedRevocationRequest[]\",\"name\":\"multiDelegatedRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiRevokeByDelegation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"multiRevokeOffchain\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"multiTimestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct RevocationRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData\",\"name\":\"data\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature\",\"name\":\"signature\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct DelegatedRevocationRequest\",\"name\":\"delegatedRequest\",\"type\":\"tuple\"}],\"name\":\"revokeByDelegation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"revokeOffchain\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"newTime\",\"type\":\"uint64\"}],\"name\":\"setTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"timestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Attested(address,address,bytes32,bytes32)\":{\"params\":{\"attester\":\"The attesting account.\",\"recipient\":\"The recipient of the attestation.\",\"schemaUID\":\"The UID of the schema.\",\"uid\":\"The UID the revoked attestation.\"}},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"NonceIncreased(uint256,uint256)\":{\"params\":{\"newNonce\":\"The new value.\",\"oldNonce\":\"The previous nonce.\"}},\"Revoked(address,address,bytes32,bytes32)\":{\"params\":{\"attester\":\"The attesting account.\",\"recipient\":\"The recipient of the attestation.\",\"schemaUID\":\"The UID of the schema.\",\"uid\":\"The UID the revoked attestation.\"}},\"RevokedOffchain(address,bytes32,uint64)\":{\"params\":{\"data\":\"The data.\",\"revoker\":\"The address of the revoker.\",\"timestamp\":\"The timestamp.\"}},\"Timestamped(bytes32,uint64)\":{\"params\":{\"data\":\"The data.\",\"timestamp\":\"The timestamp.\"}}},\"kind\":\"dev\",\"methods\":{\"attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))\":{\"params\":{\"request\":\"The arguments of the attestation request.\"},\"returns\":{\"_0\":\"The UID of the new attestation. Example:     attest({         schema: \\\"0facc36681cbe2456019c1b0d1e7bedd6d1d40f6f324bf3dd3a4cef2999200a0\\\",         data: {             recipient: \\\"0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf\\\",             expirationTime: 0,             revocable: true,             refUID: \\\"0x0000000000000000000000000000000000000000000000000000000000000000\\\",             data: \\\"0xF00D\\\",             value: 0         }     })\"}},\"attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"params\":{\"delegatedRequest\":\"The arguments of the delegated attestation request.\"},\"returns\":{\"_0\":\"The UID of the new attestation. Example:     attestByDelegation({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 0         },         signature: {             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         attester: '0xc5E8740aD971409492b1A63Db8d83025e0Fc427e',         deadline: 1673891048     })\"}},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getAttestTypeHash()\":{\"returns\":{\"_0\":\"The EIP712 type hash for the attest function.\"}},\"getAttestation(bytes32)\":{\"params\":{\"uid\":\"The UID of the attestation to retrieve.\"},\"returns\":{\"_0\":\"The attestation data members.\"}},\"getDomainSeparator()\":{\"returns\":{\"_0\":\"The domain separator used in the encoding of the signatures for attest, and revoke.\"}},\"getName()\":{\"returns\":{\"_0\":\"The EIP712 name.\"}},\"getNonce(address)\":{\"params\":{\"account\":\"The requested account.\"},\"returns\":{\"_0\":\"The current nonce.\"}},\"getRevokeOffchain(address,bytes32)\":{\"params\":{\"data\":\"The data to query.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}},\"getRevokeTypeHash()\":{\"returns\":{\"_0\":\"The EIP712 type hash for the revoke function.\"}},\"getSchemaRegistry()\":{\"returns\":{\"_0\":\"The address of the global schema registry.\"}},\"getTimestamp(bytes32)\":{\"params\":{\"data\":\"The data to query.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}},\"increaseNonce(uint256)\":{\"params\":{\"newNonce\":\"The (higher) new value.\"}},\"isAttestationValid(bytes32)\":{\"params\":{\"uid\":\"The UID of the attestation to retrieve.\"},\"returns\":{\"_0\":\"Whether an attestation exists.\"}},\"multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])\":{\"params\":{\"multiRequests\":\"The arguments of the multi attestation requests. The requests should be grouped by distinct     schema ids to benefit from the best batching optimization.\"},\"returns\":{\"_0\":\"The UIDs of the new attestations. Example:     multiAttest([{         schema: '0x33e9094830a5cba5554d1954310e4fbed2ef5f859ec1404619adea4207f391fd',         data: [{             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 1000         },         {             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 0,             revocable: false,             refUID: '0x480df4a039efc31b11bfdf491b383ca138b6bde160988222a2a3509c02cee174',             data: '0x00',             value: 0         }],     },     {         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',         data: [{             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 0,             revocable: true,             refUID: '0x75bf2ed8dca25a8190c50c52db136664de25b2449535839008ccfdab469b214f',             data: '0x12345678',             value: 0         },     }])\"}},\"multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"params\":{\"multiDelegatedRequests\":\"The arguments of the delegated multi attestation requests. The requests should be     grouped by distinct schema ids to benefit from the best batching optimization.\"},\"returns\":{\"_0\":\"The UIDs of the new attestations. Example:     multiAttestByDelegation([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 0         },         {             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 0,             revocable: false,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x00',             value: 0         }],         signatures: [{             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         {             v: 28,             r: '0x487s...67bb',             s: '0x12ad...2366'         }],         attester: '0x1D86495b2A7B524D747d2839b3C645Bed32e8CF4',         deadline: 1673891048     }])\"}},\"multiRevoke((bytes32,(bytes32,uint256)[])[])\":{\"params\":{\"multiRequests\":\"The arguments of the multi revocation requests. The requests should be grouped by distinct     schema ids to benefit from the best batching optimization. Example:     multiRevoke([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',             value: 1000         },         {             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',             value: 0         }],     },     {         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',         data: [{             uid: '0x053d42abce1fd7c8fcddfae21845ad34dae287b2c326220b03ba241bc5a8f019',             value: 0         },     }])\"}},\"multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"params\":{\"multiDelegatedRequests\":\"The arguments of the delegated multi revocation attestation requests. The requests     should be grouped by distinct schema ids to benefit from the best batching optimization. Example:     multiRevokeByDelegation([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',             value: 1000         },         {             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',             value: 0         }],         signatures: [{             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         {             v: 28,             r: '0x487s...67bb',             s: '0x12ad...2366'         }],         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',         deadline: 1673891048     }])\"}},\"multiRevokeOffchain(bytes32[])\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was revoked with.\"}},\"multiTimestamp(bytes32[])\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}},\"revoke((bytes32,(bytes32,uint256)))\":{\"params\":{\"request\":\"The arguments of the revocation request. Example:     revoke({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             uid: '0x101032e487642ee04ee17049f99a70590c735b8614079fc9275f9dd57c00966d',             value: 0         }     })\"}},\"revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"params\":{\"delegatedRequest\":\"The arguments of the delegated revocation request. Example:     revokeByDelegation({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             uid: '0xcbbc12102578c642a0f7b34fe7111e41afa25683b6cd7b5a14caf90fa14d24ba',             value: 0         },         signature: {             v: 27,             r: '0xb593...7142',             s: '0x0f5b...2cce'         },         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',         deadline: 1673891048     })\"}},\"revokeOffchain(bytes32)\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was revoked with.\"}},\"timestamp(bytes32)\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Attested(address,address,bytes32,bytes32)\":{\"notice\":\"Emitted when an attestation has been made.\"},\"NonceIncreased(uint256,uint256)\":{\"notice\":\"Emitted when users invalidate nonces by increasing their nonces to (higher) new values.\"},\"Revoked(address,address,bytes32,bytes32)\":{\"notice\":\"Emitted when an attestation has been revoked.\"},\"RevokedOffchain(address,bytes32,uint64)\":{\"notice\":\"Emitted when a data has been revoked.\"},\"Timestamped(bytes32,uint64)\":{\"notice\":\"Emitted when a data has been timestamped.\"}},\"kind\":\"user\",\"methods\":{\"attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))\":{\"notice\":\"Attests to a specific schema.\"},\"attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"notice\":\"Attests to a specific schema via the provided ECDSA signature.\"},\"getAttestTypeHash()\":{\"notice\":\"Returns the EIP712 type hash for the attest function.\"},\"getAttestation(bytes32)\":{\"notice\":\"Returns an existing attestation by UID.\"},\"getDomainSeparator()\":{\"notice\":\"Returns the domain separator used in the encoding of the signatures for attest, and revoke.\"},\"getName()\":{\"notice\":\"Returns the EIP712 name.\"},\"getNonce(address)\":{\"notice\":\"Returns the current nonce per-account.\"},\"getRevokeOffchain(address,bytes32)\":{\"notice\":\"Returns the timestamp that the specified data was timestamped with.\"},\"getRevokeTypeHash()\":{\"notice\":\"Returns the EIP712 type hash for the revoke function.\"},\"getSchemaRegistry()\":{\"notice\":\"Returns the address of the global schema registry.\"},\"getTimestamp(bytes32)\":{\"notice\":\"Returns the timestamp that the specified data was timestamped with.\"},\"increaseNonce(uint256)\":{\"notice\":\"Provides users an option to invalidate nonces by increasing their nonces to (higher) new values.\"},\"isAttestationValid(bytes32)\":{\"notice\":\"Checks whether an attestation exists.\"},\"multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])\":{\"notice\":\"Attests to multiple schemas.\"},\"multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"notice\":\"Attests to multiple schemas using via provided ECDSA signatures.\"},\"multiRevoke((bytes32,(bytes32,uint256)[])[])\":{\"notice\":\"Revokes existing attestations to multiple schemas.\"},\"multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"notice\":\"Revokes existing attestations to multiple schemas via provided ECDSA signatures.\"},\"multiRevokeOffchain(bytes32[])\":{\"notice\":\"Revokes the specified multiple bytes32 data.\"},\"multiTimestamp(bytes32[])\":{\"notice\":\"Timestamps the specified multiple bytes32 data.\"},\"revoke((bytes32,(bytes32,uint256)))\":{\"notice\":\"Revokes an existing attestation to a specific schema.\"},\"revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"notice\":\"Revokes an existing attestation to a specific schema via the provided ECDSA signature.\"},\"revokeOffchain(bytes32)\":{\"notice\":\"Revokes the specified bytes32 data.\"},\"timestamp(bytes32)\":{\"notice\":\"Timestamps the specified bytes32 data.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tests/TestEAS.sol\":\"TestEAS\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"src/EAS.sol\":{\"keccak256\":\"0x0ccad8feb72c73528fddde76e00bd7717233711079e744165e34312169f85684\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daede3adfe1325b382d2b78dd51ab7ca83c8b1ef86c0e16a1b4d994f4cb36db6\",\"dweb:/ipfs/QmVDMqeTWjMiyaS7TRWYUGurrUEqvqe9YrUnXkM6UvfBFX\"]},\"src/IEAS.sol\":{\"keccak256\":\"0xd5a192f0bcee5372b69b0bb746c26317a2691dd10bfa52adbd08a9b723a55036\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca836dd01016e7198a0b8e9e79d78512eb9db86dde6afd47f727f18d9a9c33a1\",\"dweb:/ipfs/QmXLTzcLUvA52qpVRUtVvj6L73cTmHk62jGsf6JErXFxD4\"]},\"src/ISchemaRegistry.sol\":{\"keccak256\":\"0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517\",\"dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp\"]},\"src/Semver.sol\":{\"keccak256\":\"0x5883c852730b00d73b10475f3b382afce8f30b89f337078ec03a66c463e048a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab7f1cf03a19860d07100bd61a8138346c5682bced5dbc569847d35241ba1fd\",\"dweb:/ipfs/QmfTTnWbarxDZuUCCextgxrTcATy1N1XoPBmFYj2nQZJUG\"]},\"src/eip1271/EIP1271Verifier.sol\":{\"keccak256\":\"0x8a6310b2a5d70bfd849fbf470507a545df5fb4934b59cd95337014ba017e485a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://685b3ed0dbeb7218cc4272af6ea680192418837adeede52c93cd5fc5425f4307\",\"dweb:/ipfs/QmVtExfXou1sz4CneXEwwBAEPFZMo5mk3rmgimBVmqyJou\"]},\"src/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d\",\"dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC\"]},\"src/tests/TestEAS.sol\":{\"keccak256\":\"0xcc55faa644f7f445eb9c8e7df950e4534ec134e2d540aec3d784a6ae14a64a1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffdbf388482685d1647677a73b4b0fa4075bd40394c45d32bea0d4734148d689\",\"dweb:/ipfs/QmTQmFa7XCjDBJzXJfdiTY3GpmoD6Y8ZRrDqs9DSdbhPj5\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ISchemaRegistry",
              "name": "registry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessDenied"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyRevoked"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyRevokedOffchain"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyTimestamped"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlineExpired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAttestation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAttestations"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidExpirationTime"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNonce"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOffset"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidRegistry"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidRevocation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidRevocations"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSchema"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidVerifier"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Irrevocable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotFound"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotPayable"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WrongSchema"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "schemaUID",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Attested",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldNonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newNonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NonceIncreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "schemaUID",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Revoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "revoker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "timestamp",
              "type": "uint64",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOffchain",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "timestamp",
              "type": "uint64",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Timestamped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct AttestationRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct AttestationRequestData",
                  "name": "data",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "attest",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DelegatedAttestationRequest",
              "name": "delegatedRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct AttestationRequestData",
                  "name": "data",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Signature",
                  "name": "signature",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "deadline",
                  "type": "uint64"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "attestByDelegation",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getAttestTypeHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAttestation",
          "outputs": [
            {
              "internalType": "struct Attestation",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDomainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "revoker",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevokeOffchain",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getRevokeTypeHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSchemaRegistry",
          "outputs": [
            {
              "internalType": "contract ISchemaRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTime",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimestamp",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newNonce",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseNonce"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAttestationValid",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MultiAttestationRequest[]",
              "name": "multiRequests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct AttestationRequestData[]",
                  "name": "data",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiAttest",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MultiDelegatedAttestationRequest[]",
              "name": "multiDelegatedRequests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct AttestationRequestData[]",
                  "name": "data",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Signature[]",
                  "name": "signatures",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "deadline",
                  "type": "uint64"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiAttestByDelegation",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MultiRevocationRequest[]",
              "name": "multiRequests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct RevocationRequestData[]",
                  "name": "data",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiRevoke"
        },
        {
          "inputs": [
            {
              "internalType": "struct MultiDelegatedRevocationRequest[]",
              "name": "multiDelegatedRequests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct RevocationRequestData[]",
                  "name": "data",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Signature[]",
                  "name": "signatures",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "revoker",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "deadline",
                  "type": "uint64"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiRevokeByDelegation"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multiRevokeOffchain",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multiTimestamp",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct RevocationRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct RevocationRequestData",
                  "name": "data",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            {
              "internalType": "struct DelegatedRevocationRequest",
              "name": "delegatedRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct RevocationRequestData",
                  "name": "data",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Signature",
                  "name": "signature",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "revoker",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "deadline",
                  "type": "uint64"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "revokeByDelegation"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOffchain",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "newTime",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTime"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "timestamp",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))": {
            "params": {
              "request": "The arguments of the attestation request."
            },
            "returns": {
              "_0": "The UID of the new attestation. Example:     attest({         schema: \"0facc36681cbe2456019c1b0d1e7bedd6d1d40f6f324bf3dd3a4cef2999200a0\",         data: {             recipient: \"0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf\",             expirationTime: 0,             revocable: true,             refUID: \"0x0000000000000000000000000000000000000000000000000000000000000000\",             data: \"0xF00D\",             value: 0         }     })"
            }
          },
          "attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))": {
            "params": {
              "delegatedRequest": "The arguments of the delegated attestation request."
            },
            "returns": {
              "_0": "The UID of the new attestation. Example:     attestByDelegation({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 0         },         signature: {             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         attester: '0xc5E8740aD971409492b1A63Db8d83025e0Fc427e',         deadline: 1673891048     })"
            }
          },
          "eip712Domain()": {
            "details": "See {EIP-5267}. _Available since v4.9._"
          },
          "getAttestTypeHash()": {
            "returns": {
              "_0": "The EIP712 type hash for the attest function."
            }
          },
          "getAttestation(bytes32)": {
            "params": {
              "uid": "The UID of the attestation to retrieve."
            },
            "returns": {
              "_0": "The attestation data members."
            }
          },
          "getDomainSeparator()": {
            "returns": {
              "_0": "The domain separator used in the encoding of the signatures for attest, and revoke."
            }
          },
          "getName()": {
            "returns": {
              "_0": "The EIP712 name."
            }
          },
          "getNonce(address)": {
            "params": {
              "account": "The requested account."
            },
            "returns": {
              "_0": "The current nonce."
            }
          },
          "getRevokeOffchain(address,bytes32)": {
            "params": {
              "data": "The data to query."
            },
            "returns": {
              "_0": "The timestamp the data was timestamped with."
            }
          },
          "getRevokeTypeHash()": {
            "returns": {
              "_0": "The EIP712 type hash for the revoke function."
            }
          },
          "getSchemaRegistry()": {
            "returns": {
              "_0": "The address of the global schema registry."
            }
          },
          "getTimestamp(bytes32)": {
            "params": {
              "data": "The data to query."
            },
            "returns": {
              "_0": "The timestamp the data was timestamped with."
            }
          },
          "increaseNonce(uint256)": {
            "params": {
              "newNonce": "The (higher) new value."
            }
          },
          "isAttestationValid(bytes32)": {
            "params": {
              "uid": "The UID of the attestation to retrieve."
            },
            "returns": {
              "_0": "Whether an attestation exists."
            }
          },
          "multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])": {
            "params": {
              "multiRequests": "The arguments of the multi attestation requests. The requests should be grouped by distinct     schema ids to benefit from the best batching optimization."
            },
            "returns": {
              "_0": "The UIDs of the new attestations. Example:     multiAttest([{         schema: '0x33e9094830a5cba5554d1954310e4fbed2ef5f859ec1404619adea4207f391fd',         data: [{             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 1000         },         {             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 0,             revocable: false,             refUID: '0x480df4a039efc31b11bfdf491b383ca138b6bde160988222a2a3509c02cee174',             data: '0x00',             value: 0         }],     },     {         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',         data: [{             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 0,             revocable: true,             refUID: '0x75bf2ed8dca25a8190c50c52db136664de25b2449535839008ccfdab469b214f',             data: '0x12345678',             value: 0         },     }])"
            }
          },
          "multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])": {
            "params": {
              "multiDelegatedRequests": "The arguments of the delegated multi attestation requests. The requests should be     grouped by distinct schema ids to benefit from the best batching optimization."
            },
            "returns": {
              "_0": "The UIDs of the new attestations. Example:     multiAttestByDelegation([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 0         },         {             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 0,             revocable: false,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x00',             value: 0         }],         signatures: [{             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         {             v: 28,             r: '0x487s...67bb',             s: '0x12ad...2366'         }],         attester: '0x1D86495b2A7B524D747d2839b3C645Bed32e8CF4',         deadline: 1673891048     }])"
            }
          },
          "multiRevoke((bytes32,(bytes32,uint256)[])[])": {
            "params": {
              "multiRequests": "The arguments of the multi revocation requests. The requests should be grouped by distinct     schema ids to benefit from the best batching optimization. Example:     multiRevoke([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',             value: 1000         },         {             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',             value: 0         }],     },     {         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',         data: [{             uid: '0x053d42abce1fd7c8fcddfae21845ad34dae287b2c326220b03ba241bc5a8f019',             value: 0         },     }])"
            }
          },
          "multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])": {
            "params": {
              "multiDelegatedRequests": "The arguments of the delegated multi revocation attestation requests. The requests     should be grouped by distinct schema ids to benefit from the best batching optimization. Example:     multiRevokeByDelegation([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',             value: 1000         },         {             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',             value: 0         }],         signatures: [{             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         {             v: 28,             r: '0x487s...67bb',             s: '0x12ad...2366'         }],         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',         deadline: 1673891048     }])"
            }
          },
          "multiRevokeOffchain(bytes32[])": {
            "params": {
              "data": "The data to timestamp."
            },
            "returns": {
              "_0": "The timestamp the data was revoked with."
            }
          },
          "multiTimestamp(bytes32[])": {
            "params": {
              "data": "The data to timestamp."
            },
            "returns": {
              "_0": "The timestamp the data was timestamped with."
            }
          },
          "revoke((bytes32,(bytes32,uint256)))": {
            "params": {
              "request": "The arguments of the revocation request. Example:     revoke({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             uid: '0x101032e487642ee04ee17049f99a70590c735b8614079fc9275f9dd57c00966d',             value: 0         }     })"
            }
          },
          "revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))": {
            "params": {
              "delegatedRequest": "The arguments of the delegated revocation request. Example:     revokeByDelegation({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             uid: '0xcbbc12102578c642a0f7b34fe7111e41afa25683b6cd7b5a14caf90fa14d24ba',             value: 0         },         signature: {             v: 27,             r: '0xb593...7142',             s: '0x0f5b...2cce'         },         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',         deadline: 1673891048     })"
            }
          },
          "revokeOffchain(bytes32)": {
            "params": {
              "data": "The data to timestamp."
            },
            "returns": {
              "_0": "The timestamp the data was revoked with."
            }
          },
          "timestamp(bytes32)": {
            "params": {
              "data": "The data to timestamp."
            },
            "returns": {
              "_0": "The timestamp the data was timestamped with."
            }
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))": {
            "notice": "Attests to a specific schema."
          },
          "attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))": {
            "notice": "Attests to a specific schema via the provided ECDSA signature."
          },
          "getAttestTypeHash()": {
            "notice": "Returns the EIP712 type hash for the attest function."
          },
          "getAttestation(bytes32)": {
            "notice": "Returns an existing attestation by UID."
          },
          "getDomainSeparator()": {
            "notice": "Returns the domain separator used in the encoding of the signatures for attest, and revoke."
          },
          "getName()": {
            "notice": "Returns the EIP712 name."
          },
          "getNonce(address)": {
            "notice": "Returns the current nonce per-account."
          },
          "getRevokeOffchain(address,bytes32)": {
            "notice": "Returns the timestamp that the specified data was timestamped with."
          },
          "getRevokeTypeHash()": {
            "notice": "Returns the EIP712 type hash for the revoke function."
          },
          "getSchemaRegistry()": {
            "notice": "Returns the address of the global schema registry."
          },
          "getTimestamp(bytes32)": {
            "notice": "Returns the timestamp that the specified data was timestamped with."
          },
          "increaseNonce(uint256)": {
            "notice": "Provides users an option to invalidate nonces by increasing their nonces to (higher) new values."
          },
          "isAttestationValid(bytes32)": {
            "notice": "Checks whether an attestation exists."
          },
          "multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])": {
            "notice": "Attests to multiple schemas."
          },
          "multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])": {
            "notice": "Attests to multiple schemas using via provided ECDSA signatures."
          },
          "multiRevoke((bytes32,(bytes32,uint256)[])[])": {
            "notice": "Revokes existing attestations to multiple schemas."
          },
          "multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])": {
            "notice": "Revokes existing attestations to multiple schemas via provided ECDSA signatures."
          },
          "multiRevokeOffchain(bytes32[])": {
            "notice": "Revokes the specified multiple bytes32 data."
          },
          "multiTimestamp(bytes32[])": {
            "notice": "Timestamps the specified multiple bytes32 data."
          },
          "revoke((bytes32,(bytes32,uint256)))": {
            "notice": "Revokes an existing attestation to a specific schema."
          },
          "revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))": {
            "notice": "Revokes an existing attestation to a specific schema via the provided ECDSA signature."
          },
          "revokeOffchain(bytes32)": {
            "notice": "Revokes the specified bytes32 data."
          },
          "timestamp(bytes32)": {
            "notice": "Timestamps the specified bytes32 data."
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/tests/TestEAS.sol": "TestEAS"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f",
        "urls": [
          "bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc",
          "dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol": {
        "keccak256": "0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256",
        "urls": [
          "bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516",
          "dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd",
        "urls": [
          "bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a",
          "dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80",
        "urls": [
          "bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d",
          "dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/Common.sol": {
        "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
        "urls": [
          "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
          "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
        ],
        "license": "MIT"
      },
      "src/EAS.sol": {
        "keccak256": "0x0ccad8feb72c73528fddde76e00bd7717233711079e744165e34312169f85684",
        "urls": [
          "bzz-raw://daede3adfe1325b382d2b78dd51ab7ca83c8b1ef86c0e16a1b4d994f4cb36db6",
          "dweb:/ipfs/QmVDMqeTWjMiyaS7TRWYUGurrUEqvqe9YrUnXkM6UvfBFX"
        ],
        "license": "MIT"
      },
      "src/IEAS.sol": {
        "keccak256": "0xd5a192f0bcee5372b69b0bb746c26317a2691dd10bfa52adbd08a9b723a55036",
        "urls": [
          "bzz-raw://ca836dd01016e7198a0b8e9e79d78512eb9db86dde6afd47f727f18d9a9c33a1",
          "dweb:/ipfs/QmXLTzcLUvA52qpVRUtVvj6L73cTmHk62jGsf6JErXFxD4"
        ],
        "license": "MIT"
      },
      "src/ISchemaRegistry.sol": {
        "keccak256": "0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4",
        "urls": [
          "bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517",
          "dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp"
        ],
        "license": "MIT"
      },
      "src/Semver.sol": {
        "keccak256": "0x5883c852730b00d73b10475f3b382afce8f30b89f337078ec03a66c463e048a8",
        "urls": [
          "bzz-raw://0ab7f1cf03a19860d07100bd61a8138346c5682bced5dbc569847d35241ba1fd",
          "dweb:/ipfs/QmfTTnWbarxDZuUCCextgxrTcATy1N1XoPBmFYj2nQZJUG"
        ],
        "license": "MIT"
      },
      "src/eip1271/EIP1271Verifier.sol": {
        "keccak256": "0x8a6310b2a5d70bfd849fbf470507a545df5fb4934b59cd95337014ba017e485a",
        "urls": [
          "bzz-raw://685b3ed0dbeb7218cc4272af6ea680192418837adeede52c93cd5fc5425f4307",
          "dweb:/ipfs/QmVtExfXou1sz4CneXEwwBAEPFZMo5mk3rmgimBVmqyJou"
        ],
        "license": "MIT"
      },
      "src/resolver/ISchemaResolver.sol": {
        "keccak256": "0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395",
        "urls": [
          "bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d",
          "dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC"
        ],
        "license": "MIT"
      },
      "src/tests/TestEAS.sol": {
        "keccak256": "0xcc55faa644f7f445eb9c8e7df950e4534ec134e2d540aec3d784a6ae14a64a1e",
        "urls": [
          "bzz-raw://ffdbf388482685d1647677a73b4b0fa4075bd40394c45d32bea0d4734148d689",
          "dweb:/ipfs/QmTQmFa7XCjDBJzXJfdiTY3GpmoD6Y8ZRrDqs9DSdbhPj5"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/tests/TestEAS.sol",
    "id": 48805,
    "exportedSymbols": {
      "EAS": [
        45218
      ],
      "ISchemaRegistry": [
        45559
      ],
      "TestEAS": [
        48804
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:622:54",
    "nodes": [
      {
        "id": 48746,
        "nodeType": "PragmaDirective",
        "src": "33:23:54",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 48748,
        "nodeType": "ImportDirective",
        "src": "58:33:54",
        "nodes": [],
        "absolutePath": "src/EAS.sol",
        "file": "../EAS.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48805,
        "sourceUnit": 45219,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48747,
              "name": "EAS",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45218,
              "src": "67:3:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48750,
        "nodeType": "ImportDirective",
        "src": "93:57:54",
        "nodes": [],
        "absolutePath": "src/ISchemaRegistry.sol",
        "file": "../ISchemaRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48805,
        "sourceUnit": 45560,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48749,
              "name": "ISchemaRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45559,
              "src": "102:15:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48804,
        "nodeType": "ContractDefinition",
        "src": "152:502:54",
        "nodes": [
          {
            "id": 48755,
            "nodeType": "VariableDeclaration",
            "src": "182:40:54",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "INITIAL_TIME",
            "nameLocation": "206:12:54",
            "scope": 48804,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 48753,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "182:6:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 48754,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "221:1:54",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "id": 48758,
            "nodeType": "VariableDeclaration",
            "src": "229:42:54",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_currentTime",
            "nameLocation": "244:12:54",
            "scope": 48804,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 48756,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "229:6:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "id": 48757,
              "name": "INITIAL_TIME",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48755,
              "src": "259:12:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "private"
          },
          {
            "id": 48768,
            "nodeType": "FunctionDefinition",
            "src": "278:54:54",
            "nodes": [],
            "body": {
              "id": 48767,
              "nodeType": "Block",
              "src": "330:2:54",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 48764,
                    "name": "registry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48761,
                    "src": "320:8:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISchemaRegistry_$45559",
                      "typeString": "contract ISchemaRegistry"
                    }
                  }
                ],
                "id": 48765,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 48763,
                  "name": "EAS",
                  "nameLocations": [
                    "316:3:54"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45218,
                  "src": "316:3:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "316:13:54"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 48762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48761,
                  "mutability": "mutable",
                  "name": "registry",
                  "nameLocation": "306:8:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 48768,
                  "src": "290:24:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISchemaRegistry_$45559",
                    "typeString": "contract ISchemaRegistry"
                  },
                  "typeName": {
                    "id": 48760,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48759,
                      "name": "ISchemaRegistry",
                      "nameLocations": [
                        "290:15:54"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45559,
                      "src": "290:15:54"
                    },
                    "referencedDeclaration": 45559,
                    "src": "290:15:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISchemaRegistry_$45559",
                      "typeString": "contract ISchemaRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "289:26:54"
            },
            "returnParameters": {
              "id": 48766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "330:0:54"
            },
            "scope": 48804,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48778,
            "nodeType": "FunctionDefinition",
            "src": "338:81:54",
            "nodes": [],
            "body": {
              "id": 48777,
              "nodeType": "Block",
              "src": "380:39:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48773,
                      "name": "_currentTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48758,
                      "src": "390:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48774,
                      "name": "newTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48770,
                      "src": "405:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "390:22:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 48776,
                  "nodeType": "ExpressionStatement",
                  "src": "390:22:54"
                }
              ]
            },
            "functionSelector": "7e4e1292",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTime",
            "nameLocation": "347:7:54",
            "parameters": {
              "id": 48771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48770,
                  "mutability": "mutable",
                  "name": "newTime",
                  "nameLocation": "362:7:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 48778,
                  "src": "355:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 48769,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "354:16:54"
            },
            "returnParameters": {
              "id": 48772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "380:0:54"
            },
            "scope": 48804,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48787,
            "nodeType": "FunctionDefinition",
            "src": "425:81:54",
            "nodes": [],
            "body": {
              "id": 48786,
              "nodeType": "Block",
              "src": "475:31:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48783,
                      "name": "_time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        48803
                      ],
                      "referencedDeclaration": 48803,
                      "src": "492:5:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint64_$",
                        "typeString": "function () view returns (uint64)"
                      }
                    },
                    "id": 48784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "492:7:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 48782,
                  "id": 48785,
                  "nodeType": "Return",
                  "src": "485:14:54"
                }
              ]
            },
            "functionSelector": "557ed1ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTime",
            "nameLocation": "434:7:54",
            "parameters": {
              "id": 48779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "441:2:54"
            },
            "returnParameters": {
              "id": 48782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48781,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48787,
                  "src": "467:6:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 48780,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "467:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "466:8:54"
            },
            "scope": 48804,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48803,
            "nodeType": "FunctionDefinition",
            "src": "512:140:54",
            "nodes": [],
            "body": {
              "id": 48802,
              "nodeType": "Block",
              "src": "569:83:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 48795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 48793,
                        "name": "_currentTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48758,
                        "src": "586:12:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 48794,
                        "name": "INITIAL_TIME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48755,
                        "src": "602:12:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "586:28:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 48799,
                      "name": "_currentTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48758,
                      "src": "633:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 48800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "586:59:54",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 48796,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "617:5:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_TestEAS_$48804_$",
                            "typeString": "type(contract super TestEAS)"
                          }
                        },
                        "id": 48797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "623:5:54",
                        "memberName": "_time",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46636,
                        "src": "617:11:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint64_$",
                          "typeString": "function () view returns (uint64)"
                        }
                      },
                      "id": 48798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "617:13:54",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 48792,
                  "id": 48801,
                  "nodeType": "Return",
                  "src": "579:66:54"
                }
              ]
            },
            "baseFunctions": [
              46636
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_time",
            "nameLocation": "521:5:54",
            "overrides": {
              "id": 48789,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "543:8:54"
            },
            "parameters": {
              "id": 48788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "526:2:54"
            },
            "returnParameters": {
              "id": 48792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48791,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48803,
                  "src": "561:6:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 48790,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "560:8:54"
            },
            "scope": 48804,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48751,
              "name": "EAS",
              "nameLocations": [
                "172:3:54"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45218,
              "src": "172:3:54"
            },
            "id": 48752,
            "nodeType": "InheritanceSpecifier",
            "src": "172:3:54"
          }
        ],
        "canonicalName": "TestEAS",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          48804,
          45218,
          46637,
          42109,
          39530,
          46303,
          45511
        ],
        "name": "TestEAS",
        "nameLocation": "161:7:54",
        "scope": 48805,
        "usedErrors": [
          40997,
          40999,
          43210,
          43212,
          43216,
          43218,
          43220,
          43310,
          43312,
          43314,
          43316,
          43318,
          43320,
          43322,
          43324,
          43326,
          43328,
          43330,
          43332,
          43334,
          43336,
          43338,
          43340,
          46329
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 54
}