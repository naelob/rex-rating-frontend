{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "uid",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "registerer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "contract ISchemaResolver",
              "name": "resolver",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "schema",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct SchemaRecord",
          "name": "schema",
          "type": "tuple"
        }
      ],
      "name": "Registered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "uid",
          "type": "bytes32"
        }
      ],
      "name": "getSchema",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "contract ISchemaResolver",
              "name": "resolver",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "schema",
              "type": "string"
            }
          ],
          "internalType": "struct SchemaRecord",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "schema",
          "type": "string"
        },
        {
          "internalType": "contract ISchemaResolver",
          "name": "resolver",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "revocable",
          "type": "bool"
        }
      ],
      "name": "register",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getSchema(bytes32)": "a2ea7c6e",
    "register(string,address,bool)": "60d7a278"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registerer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct SchemaRecord\",\"name\":\"schema\",\"type\":\"tuple\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Registered(bytes32,address,(bytes32,address,bool,string))\":{\"params\":{\"registerer\":\"The address of the account used to register the schema.\",\"schema\":\"The schema data.\",\"uid\":\"The schema UID.\"}}},\"kind\":\"dev\",\"methods\":{\"getSchema(bytes32)\":{\"params\":{\"uid\":\"The UID of the schema to retrieve.\"},\"returns\":{\"_0\":\"The schema data members.\"}},\"register(string,address,bool)\":{\"params\":{\"resolver\":\"An optional schema resolver.\",\"revocable\":\"Whether the schema allows revocations explicitly.\",\"schema\":\"The schema data schema.\"},\"returns\":{\"_0\":\"The UID of the new schema.\"}}},\"title\":\"ISchemaRegistry\",\"version\":1},\"userdoc\":{\"events\":{\"Registered(bytes32,address,(bytes32,address,bool,string))\":{\"notice\":\"Emitted when a new schema has been registered\"}},\"kind\":\"user\",\"methods\":{\"getSchema(bytes32)\":{\"notice\":\"Returns an existing schema by UID\"},\"register(string,address,bool)\":{\"notice\":\"Submits and reserves a new schema\"}},\"notice\":\"The interface of global attestation schemas for the Ethereum Attestation Service protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ISchemaRegistry.sol\":\"ISchemaRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"src/ISchemaRegistry.sol\":{\"keccak256\":\"0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517\",\"dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp\"]},\"src/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d\",\"dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "registerer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct SchemaRecord",
              "name": "schema",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract ISchemaResolver",
                  "name": "resolver",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "schema",
                  "type": "string"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Registered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "struct SchemaRecord",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract ISchemaResolver",
                  "name": "resolver",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "schema",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "schema",
              "type": "string"
            },
            {
              "internalType": "contract ISchemaResolver",
              "name": "resolver",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "register",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getSchema(bytes32)": {
            "params": {
              "uid": "The UID of the schema to retrieve."
            },
            "returns": {
              "_0": "The schema data members."
            }
          },
          "register(string,address,bool)": {
            "params": {
              "resolver": "An optional schema resolver.",
              "revocable": "Whether the schema allows revocations explicitly.",
              "schema": "The schema data schema."
            },
            "returns": {
              "_0": "The UID of the new schema."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getSchema(bytes32)": {
            "notice": "Returns an existing schema by UID"
          },
          "register(string,address,bool)": {
            "notice": "Submits and reserves a new schema"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ISchemaRegistry.sol": "ISchemaRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "src/Common.sol": {
        "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
        "urls": [
          "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
          "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
        ],
        "license": "MIT"
      },
      "src/ISchemaRegistry.sol": {
        "keccak256": "0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4",
        "urls": [
          "bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517",
          "dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp"
        ],
        "license": "MIT"
      },
      "src/resolver/ISchemaResolver.sol": {
        "keccak256": "0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395",
        "urls": [
          "bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d",
          "dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ISchemaRegistry.sol",
    "id": 45560,
    "exportedSymbols": {
      "ISchemaRegistry": [
        45559
      ],
      "ISchemaResolver": [
        47725
      ],
      "SchemaRecord": [
        45525
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1527:36",
    "nodes": [
      {
        "id": 45513,
        "nodeType": "PragmaDirective",
        "src": "33:23:36",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 45515,
        "nodeType": "ImportDirective",
        "src": "58:65:36",
        "nodes": [],
        "absolutePath": "src/resolver/ISchemaResolver.sol",
        "file": "./resolver/ISchemaResolver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45560,
        "sourceUnit": 47726,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45514,
              "name": "ISchemaResolver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47725,
              "src": "67:15:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45525,
        "nodeType": "StructDefinition",
        "src": "192:285:36",
        "nodes": [],
        "canonicalName": "SchemaRecord",
        "members": [
          {
            "constant": false,
            "id": 45517,
            "mutability": "mutable",
            "name": "uid",
            "nameLocation": "226:3:36",
            "nodeType": "VariableDeclaration",
            "scope": 45525,
            "src": "218:11:36",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 45516,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "218:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 45520,
            "mutability": "mutable",
            "name": "resolver",
            "nameLocation": "291:8:36",
            "nodeType": "VariableDeclaration",
            "scope": 45525,
            "src": "275:24:36",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISchemaResolver_$47725",
              "typeString": "contract ISchemaResolver"
            },
            "typeName": {
              "id": 45519,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45518,
                "name": "ISchemaResolver",
                "nameLocations": [
                  "275:15:36"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47725,
                "src": "275:15:36"
              },
              "referencedDeclaration": 47725,
              "src": "275:15:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISchemaResolver_$47725",
                "typeString": "contract ISchemaResolver"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 45522,
            "mutability": "mutable",
            "name": "revocable",
            "nameLocation": "339:9:36",
            "nodeType": "VariableDeclaration",
            "scope": 45525,
            "src": "334:14:36",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 45521,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "334:4:36",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 45524,
            "mutability": "mutable",
            "name": "schema",
            "nameLocation": "414:6:36",
            "nodeType": "VariableDeclaration",
            "scope": 45525,
            "src": "407:13:36",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 45523,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "407:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "SchemaRecord",
        "nameLocation": "199:12:36",
        "scope": 45560,
        "visibility": "public"
      },
      {
        "id": 45559,
        "nodeType": "ContractDefinition",
        "src": "609:950:36",
        "nodes": [
          {
            "id": 45536,
            "nodeType": "EventDefinition",
            "src": "859:87:36",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 45527,
              "nodeType": "StructuredDocumentation",
              "src": "641:213:36",
              "text": "@notice Emitted when a new schema has been registered\n @param uid The schema UID.\n @param registerer The address of the account used to register the schema.\n @param schema The schema data."
            },
            "eventSelector": "d0b86852e21f9e5fa4bc3b0cff9757ffe243d50c4b43968a42202153d651ea5e",
            "name": "Registered",
            "nameLocation": "865:10:36",
            "parameters": {
              "id": 45535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45529,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "uid",
                  "nameLocation": "892:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 45536,
                  "src": "876:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 45528,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45531,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "registerer",
                  "nameLocation": "913:10:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 45536,
                  "src": "897:26:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45534,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "schema",
                  "nameLocation": "938:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 45536,
                  "src": "925:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SchemaRecord_$45525_memory_ptr",
                    "typeString": "struct SchemaRecord"
                  },
                  "typeName": {
                    "id": 45533,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45532,
                      "name": "SchemaRecord",
                      "nameLocations": [
                        "925:12:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45525,
                      "src": "925:12:36"
                    },
                    "referencedDeclaration": 45525,
                    "src": "925:12:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SchemaRecord_$45525_storage_ptr",
                      "typeString": "struct SchemaRecord"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "875:70:36"
            }
          },
          {
            "id": 45549,
            "nodeType": "FunctionDefinition",
            "src": "1219:111:36",
            "nodes": [],
            "documentation": {
              "id": 45537,
              "nodeType": "StructuredDocumentation",
              "src": "952:262:36",
              "text": "@notice Submits and reserves a new schema\n @param schema The schema data schema.\n @param resolver An optional schema resolver.\n @param revocable Whether the schema allows revocations explicitly.\n @return The UID of the new schema."
            },
            "functionSelector": "60d7a278",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nameLocation": "1228:8:36",
            "parameters": {
              "id": 45545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45539,
                  "mutability": "mutable",
                  "name": "schema",
                  "nameLocation": "1253:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 45549,
                  "src": "1237:22:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45538,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1237:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45542,
                  "mutability": "mutable",
                  "name": "resolver",
                  "nameLocation": "1277:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 45549,
                  "src": "1261:24:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISchemaResolver_$47725",
                    "typeString": "contract ISchemaResolver"
                  },
                  "typeName": {
                    "id": 45541,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45540,
                      "name": "ISchemaResolver",
                      "nameLocations": [
                        "1261:15:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47725,
                      "src": "1261:15:36"
                    },
                    "referencedDeclaration": 47725,
                    "src": "1261:15:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISchemaResolver_$47725",
                      "typeString": "contract ISchemaResolver"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45544,
                  "mutability": "mutable",
                  "name": "revocable",
                  "nameLocation": "1292:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 45549,
                  "src": "1287:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45543,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1287:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1236:66:36"
            },
            "returnParameters": {
              "id": 45548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45547,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45549,
                  "src": "1321:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 45546,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1320:9:36"
            },
            "scope": 45559,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45558,
            "nodeType": "FunctionDefinition",
            "src": "1481:76:36",
            "nodes": [],
            "documentation": {
              "id": 45550,
              "nodeType": "StructuredDocumentation",
              "src": "1336:140:36",
              "text": "@notice Returns an existing schema by UID\n @param uid The UID of the schema to retrieve.\n @return The schema data members."
            },
            "functionSelector": "a2ea7c6e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "1490:9:36",
            "parameters": {
              "id": 45553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45552,
                  "mutability": "mutable",
                  "name": "uid",
                  "nameLocation": "1508:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 45558,
                  "src": "1500:11:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 45551,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1500:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1499:13:36"
            },
            "returnParameters": {
              "id": 45557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45556,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45558,
                  "src": "1536:19:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SchemaRecord_$45525_memory_ptr",
                    "typeString": "struct SchemaRecord"
                  },
                  "typeName": {
                    "id": 45555,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45554,
                      "name": "SchemaRecord",
                      "nameLocations": [
                        "1536:12:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45525,
                      "src": "1536:12:36"
                    },
                    "referencedDeclaration": 45525,
                    "src": "1536:12:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SchemaRecord_$45525_storage_ptr",
                      "typeString": "struct SchemaRecord"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1535:21:36"
            },
            "scope": 45559,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISchemaRegistry",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 45526,
          "nodeType": "StructuredDocumentation",
          "src": "479:130:36",
          "text": "@title ISchemaRegistry\n @notice The interface of global attestation schemas for the Ethereum Attestation Service protocol."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          45559
        ],
        "name": "ISchemaRegistry",
        "nameLocation": "619:15:36",
        "scope": 45560,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 36
}