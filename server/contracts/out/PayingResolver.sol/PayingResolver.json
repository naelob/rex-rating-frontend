{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEAS",
          "name": "eas",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "incentive",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessDenied",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidEAS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotPayable",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "time",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "revocationTime",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Attestation",
          "name": "attestation",
          "type": "tuple"
        }
      ],
      "name": "attest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPayable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "time",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "revocationTime",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Attestation[]",
          "name": "attestations",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "multiAttest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "time",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "revocationTime",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Attestation[]",
          "name": "attestations",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "multiRevoke",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "time",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "revocationTime",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Attestation",
          "name": "attestation",
          "type": "tuple"
        }
      ],
      "name": "revoke",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x61012060405234801561001157600080fd5b50604051610af4380380610af48339810160408190526100309161007d565b6001608052600360a052600060c052816001600160a01b038116610067576040516341bc07ff60e11b815260040160405180910390fd5b6001600160a01b031660e05261010052506100b7565b6000806040838503121561009057600080fd5b82516001600160a01b03811681146100a757600080fd5b6020939093015192949293505050565b60805160a05160c05160e051610100516109e461011060003960008181610441015281816104710152818161049f015261051c015260006103fd01526000610159015260006101300152600061010701526109e46000f3fe6080604052600436106100595760003560e01c806354fd4d501461006557806388e5b2d91461009057806391db0b7e146100b3578063ce46e046146100c6578063e49617e1146100da578063e60c3505146100ed57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061007a610100565b604051610087919061078f565b60405180910390f35b6100a361009e36600461080e565b6101a3565b6040519015158152602001610087565b6100a36100c136600461080e565b610272565b3480156100d257600080fd5b5060016100a3565b6100a36100e836600461087a565b610331565b6100a36100fb36600461087a565b61034b565b606061012b7f000000000000000000000000000000000000000000000000000000000000000061035f565b6101547f000000000000000000000000000000000000000000000000000000000000000061035f565b61017d7f000000000000000000000000000000000000000000000000000000000000000061035f565b60405160200161018f939291906108bd565b604051602081830303815290604052905090565b60006101ad6103f2565b838281146101ce5760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156102625760008686838181106101ee576101ee610917565b905060200201359050828111156102185760405163044044a560e21b815260040160405180910390fd5b61024589898481811061022d5761022d610917565b905060200281019061023f919061092d565b8261043d565b61025657600094505050505061026a565b909103906001016101d2565b506001925050505b949350505050565b600061027c6103f2565b8382811461029d5760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156102625760008686838181106102bd576102bd610917565b905060200201359050828111156102e75760405163044044a560e21b815260040160405180910390fd5b6103148989848181106102fc576102fc610917565b905060200281019061030e919061092d565b826104ed565b61032557600094505050505061026a565b909103906001016102a1565b600061033b6103f2565b610345823461043d565b92915050565b60006103556103f2565b61034582346104ed565b6060600061036c83610570565b600101905060008167ffffffffffffffff81111561038c5761038c61094e565b6040519080825280601f01601f1916602001820160405280156103b6576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846103c057509392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461043b57604051634ca8886760e01b815260040160405180910390fd5b565b60007f000000000000000000000000000000000000000000000000000000000000000082101561046f57506000610345565b7f00000000000000000000000000000000000000000000000000000000000000008211156104e4576104e46104c47f000000000000000000000000000000000000000000000000000000000000000084610964565b6104d5610100860160e08701610985565b6001600160a01b031690610648565b50600192915050565b600081156104fd57506000610345565b61050e610100840160e08501610985565b6001600160a01b03166108fc7f00000000000000000000000000000000000000000000000000000000000000009081150290604051600060405180830381858888f19350505050158015610566573d6000803e3d6000fd5b5060019392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106105af5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106105db576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106105f957662386f26fc10000830492506010015b6305f5e1008310610611576305f5e100830492506008015b612710831061062557612710830492506004015b60648310610637576064830492506002015b600a83106103455760010192915050565b8047101561069d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146106ea576040519150601f19603f3d011682016040523d82523d6000602084013e6106ef565b606091505b50509050806107665760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610694565b505050565b60005b8381101561078657818101518382015260200161076e565b50506000910152565b60208152600082518060208401526107ae81604085016020870161076b565b601f01601f19169190910160400192915050565b60008083601f8401126107d457600080fd5b50813567ffffffffffffffff8111156107ec57600080fd5b6020830191508360208260051b850101111561080757600080fd5b9250929050565b6000806000806040858703121561082457600080fd5b843567ffffffffffffffff8082111561083c57600080fd5b610848888389016107c2565b9096509450602087013591508082111561086157600080fd5b5061086e878288016107c2565b95989497509550505050565b60006020828403121561088c57600080fd5b813567ffffffffffffffff8111156108a357600080fd5b820161014081850312156108b657600080fd5b9392505050565b600084516108cf81846020890161076b565b8083019050601760f91b80825285516108ef816001850160208a0161076b565b6001920191820152835161090a81600284016020880161076b565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000823561013e1983360301811261094457600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b8181038181111561034557634e487b7160e01b600052601160045260246000fd5b60006020828403121561099757600080fd5b81356001600160a01b03811681146108b657600080fdfea2646970667358221220f7c0531a66d1743e3092ef567316cb4d1a0daf0a24c5c3a1f9186545f370baed64736f6c63430008130033",
    "sourceMap": "382:940:49:-:0;;;540:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;680:1:44;705:14:39;;683:1:44;729:14:39;;686:1:44;753:13:39;;596:3:49;-1:-1:-1;;;;;703:26:44;::::1;699:76;;752:12;;-1:-1:-1::0;;;752:12:44::1;;;;;;;;;;;699:76;-1:-1:-1::0;;;;;785:10:44::1;;::::0;611:22:49::1;::::0;-1:-1:-1;382:940:49;;14:365:61;107:6;115;168:2;156:9;147:7;143:23;139:32;136:52;;;184:1;181;174:12;136:52;210:16;;-1:-1:-1;;;;;255:31:61;;245:42;;235:70;;301:1;298;291:12;235:70;369:2;354:18;;;;348:25;324:5;;348:25;;-1:-1:-1;;;14:365:61:o;:::-;382:940:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100595760003560e01c806354fd4d501461006557806388e5b2d91461009057806391db0b7e146100b3578063ce46e046146100c6578063e49617e1146100da578063e60c3505146100ed57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061007a610100565b604051610087919061078f565b60405180910390f35b6100a361009e36600461080e565b6101a3565b6040519015158152602001610087565b6100a36100c136600461080e565b610272565b3480156100d257600080fd5b5060016100a3565b6100a36100e836600461087a565b610331565b6100a36100fb36600461087a565b61034b565b606061012b7f000000000000000000000000000000000000000000000000000000000000000061035f565b6101547f000000000000000000000000000000000000000000000000000000000000000061035f565b61017d7f000000000000000000000000000000000000000000000000000000000000000061035f565b60405160200161018f939291906108bd565b604051602081830303815290604052905090565b60006101ad6103f2565b838281146101ce5760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156102625760008686838181106101ee576101ee610917565b905060200201359050828111156102185760405163044044a560e21b815260040160405180910390fd5b61024589898481811061022d5761022d610917565b905060200281019061023f919061092d565b8261043d565b61025657600094505050505061026a565b909103906001016101d2565b506001925050505b949350505050565b600061027c6103f2565b8382811461029d5760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156102625760008686838181106102bd576102bd610917565b905060200201359050828111156102e75760405163044044a560e21b815260040160405180910390fd5b6103148989848181106102fc576102fc610917565b905060200281019061030e919061092d565b826104ed565b61032557600094505050505061026a565b909103906001016102a1565b600061033b6103f2565b610345823461043d565b92915050565b60006103556103f2565b61034582346104ed565b6060600061036c83610570565b600101905060008167ffffffffffffffff81111561038c5761038c61094e565b6040519080825280601f01601f1916602001820160405280156103b6576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846103c057509392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461043b57604051634ca8886760e01b815260040160405180910390fd5b565b60007f000000000000000000000000000000000000000000000000000000000000000082101561046f57506000610345565b7f00000000000000000000000000000000000000000000000000000000000000008211156104e4576104e46104c47f000000000000000000000000000000000000000000000000000000000000000084610964565b6104d5610100860160e08701610985565b6001600160a01b031690610648565b50600192915050565b600081156104fd57506000610345565b61050e610100840160e08501610985565b6001600160a01b03166108fc7f00000000000000000000000000000000000000000000000000000000000000009081150290604051600060405180830381858888f19350505050158015610566573d6000803e3d6000fd5b5060019392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106105af5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106105db576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106105f957662386f26fc10000830492506010015b6305f5e1008310610611576305f5e100830492506008015b612710831061062557612710830492506004015b60648310610637576064830492506002015b600a83106103455760010192915050565b8047101561069d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146106ea576040519150601f19603f3d011682016040523d82523d6000602084013e6106ef565b606091505b50509050806107665760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610694565b505050565b60005b8381101561078657818101518382015260200161076e565b50506000910152565b60208152600082518060208401526107ae81604085016020870161076b565b601f01601f19169190910160400192915050565b60008083601f8401126107d457600080fd5b50813567ffffffffffffffff8111156107ec57600080fd5b6020830191508360208260051b850101111561080757600080fd5b9250929050565b6000806000806040858703121561082457600080fd5b843567ffffffffffffffff8082111561083c57600080fd5b610848888389016107c2565b9096509450602087013591508082111561086157600080fd5b5061086e878288016107c2565b95989497509550505050565b60006020828403121561088c57600080fd5b813567ffffffffffffffff8111156108a357600080fd5b820161014081850312156108b657600080fd5b9392505050565b600084516108cf81846020890161076b565b8083019050601760f91b80825285516108ef816001850160208a0161076b565b6001920191820152835161090a81600284016020880161076b565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000823561013e1983360301811261094457600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b8181038181111561034557634e487b7160e01b600052601160045260246000fd5b60006020828403121561099757600080fd5b81356001600160a01b03811681146108b657600080fdfea2646970667358221220f7c0531a66d1743e3092ef567316cb4d1a0daf0a24c5c3a1f9186545f370baed64736f6c63430008130033",
    "sourceMap": "382:940:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;890:234:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3128:1460:44;;;;;;:::i;:::-;;:::i;:::-;;;2077:14:61;;2070:22;2052:41;;2040:2;2025:18;3128:1460:44;1912:187:61;1437:1461:44;;;;;;:::i;:::-;;:::i;646:85:49:-;;;;;;;;;;-1:-1:-1;720:4:49;646:85;;2940:146:44;;;;;;:::i;:::-;;:::i;1249:::-;;;;;;:::i;:::-;;:::i;890:234:39:-;932:13;1017:24;1034:6;1017:16;:24::i;:::-;1048;1065:6;1048:16;:24::i;:::-;1079:23;1096:5;1079:16;:23::i;:::-;1000:103;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;957:160;;890:234;:::o;3128:1460:44:-;3269:4;905:10;:8;:10::i;:::-;3302:12;3335:23;;::::1;3331:76;;3381:15;;-1:-1:-1::0;;;3381:15:44::1;;;;;;;;;;;3331:76;3839:9;3814:22;3859:701;3883:6;3879:1;:10;3859:701;;;4016:13;4032:6;;4039:1;4032:9;;;;;;;:::i;:::-;;;;;;;4016:25;;4067:14;4059:5;:22;4055:87;;;4108:19;;-1:-1:-1::0;;;4108:19:44::1;;;;;;;;;;;4055:87;4270:32;4279:12;;4292:1;4279:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;4296:5;4270:8;:32::i;:::-;4265:84;;4329:5;4322:12;;;;;;;;4265:84;4512:23:::0;;::::1;::::0;1489:1:33;1485:5;3859:701:44::1;;;;4577:4;4570:11;;;;926:1;3128:1460:::0;;;;;;:::o;1437:1461::-;1578:4;905:10;:8;:10::i;:::-;1611:12;1644:23;;::::1;1640:76;;1690:15;;-1:-1:-1::0;;;1690:15:44::1;;;;;;;;;;;1640:76;2148:9;2123:22;2168:702;2192:6;2188:1;:10;2168:702;;;2325:13;2341:6;;2348:1;2341:9;;;;;;;:::i;:::-;;;;;;;2325:25;;2376:14;2368:5;:22;2364:87;;;2417:19;;-1:-1:-1::0;;;2417:19:44::1;;;;;;;;;;;2364:87;2580:32;2589:12;;2602:1;2589:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2606:5;2580:8;:32::i;:::-;2575:84;;2639:5;2632:12;;;;;;;;2575:84;2822:23:::0;;::::1;::::0;1489:1:33;1485:5;2168:702:44::1;;2940:146:::0;3024:4;905:10;:8;:10::i;:::-;3047:32:::1;3056:11;3069:9;3047:8;:32::i;:::-;3040:39:::0;2940:146;-1:-1:-1;;2940:146:44:o;1249:::-;1333:4;905:10;:8;:10::i;:::-;1356:32:::1;1365:11;1378:9;1356:8;:32::i;447:696:26:-:0;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:26;-1:-1:-1;604:41:26;-1:-1:-1;765:28:26;;;781:2;765:28;820:280;-1:-1:-1;;851:5:26;-1:-1:-1;;;985:2:26;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:26;820:280;1064:21;-1:-1:-1;1120:6:26;447:696;-1:-1:-1;;;447:696:26:o;6035:128:44:-;6082:10;-1:-1:-1;;;;;6104:4:44;6082:27;;6078:79;;6132:14;;-1:-1:-1;;;6132:14:44;;;;;;;;;;;6078:79;6035:128::o;994:326:49:-;1088:4;1116:10;1108:5;:18;1104:61;;;-1:-1:-1;1149:5:49;1142:12;;1104:61;1187:10;1179:5;:18;1175:117;;;1213:68;1262:18;1270:10;1262:5;:18;:::i;:::-;1229:20;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1213:48:49;;;:68::i;:::-;-1:-1:-1;1309:4:49;994:326;;;;:::o;737:251::-;831:4;851:9;;847:52;;-1:-1:-1;883:5:49;876:12;;847:52;917:20;;;;;;;;:::i;:::-;-1:-1:-1;;;;;909:38:49;:50;948:10;909:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;977:4:49;;737:251;-1:-1:-1;;;737:251:49:o;10139:916:30:-;10192:7;;-1:-1:-1;;;10267:17:30;;10263:103;;-1:-1:-1;;;10304:17:30;;;-1:-1:-1;10349:2:30;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:30;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:30;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:30;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:30;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:30;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:30:o;2647:312:22:-;2761:6;2736:21;:31;;2728:73;;;;-1:-1:-1;;;2728:73:22;;4959:2:61;2728:73:22;;;4941:21:61;4998:2;4978:18;;;4971:30;5037:31;5017:18;;;5010:59;5086:18;;2728:73:22;;;;;;;;;2813:12;2831:9;-1:-1:-1;;;;;2831:14:22;2853:6;2831:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;-1:-1:-1;;;2874:78:22;;5527:2:61;2874:78:22;;;5509:21:61;5566:2;5546:18;;;5539:30;5605:34;5585:18;;;5578:62;5676:28;5656:18;;;5649:56;5722:19;;2874:78:22;5325:422:61;2874:78:22;2718:241;2647:312;;:::o;14:250:61:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:61;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:61;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:61:o;670:387::-;753:8;763:6;817:3;810:4;802:6;798:17;794:27;784:55;;835:1;832;825:12;784:55;-1:-1:-1;858:20:61;;901:18;890:30;;887:50;;;933:1;930;923:12;887:50;970:4;962:6;958:17;946:29;;1030:3;1023:4;1013:6;1010:1;1006:14;998:6;994:27;990:38;987:47;984:67;;;1047:1;1044;1037:12;984:67;670:387;;;;;:::o;1062:845::-;1216:6;1224;1232;1240;1293:2;1281:9;1272:7;1268:23;1264:32;1261:52;;;1309:1;1306;1299:12;1261:52;1349:9;1336:23;1378:18;1419:2;1411:6;1408:14;1405:34;;;1435:1;1432;1425:12;1405:34;1474:90;1556:7;1547:6;1536:9;1532:22;1474:90;:::i;:::-;1583:8;;-1:-1:-1;1448:116:61;-1:-1:-1;1671:2:61;1656:18;;1643:32;;-1:-1:-1;1687:16:61;;;1684:36;;;1716:1;1713;1706:12;1684:36;;1755:92;1839:7;1828:8;1817:9;1813:24;1755:92;:::i;:::-;1062:845;;;;-1:-1:-1;1866:8:61;-1:-1:-1;;;;1062:845:61:o;2104:392::-;2195:6;2248:2;2236:9;2227:7;2223:23;2219:32;2216:52;;;2264:1;2261;2254:12;2216:52;2304:9;2291:23;2337:18;2329:6;2326:30;2323:50;;;2369:1;2366;2359:12;2323:50;2392:22;;2448:3;2430:16;;;2426:26;2423:46;;;2465:1;2462;2455:12;2423:46;2488:2;2104:392;-1:-1:-1;;;2104:392:61:o;2501:999::-;2930:3;2968:6;2962:13;2984:66;3043:6;3038:3;3031:4;3023:6;3019:17;2984:66;:::i;:::-;3081:6;3076:3;3072:16;3059:29;;-1:-1:-1;;;3133:2:61;3126:5;3119:17;3167:6;3161:13;3183:78;3252:8;3248:1;3241:5;3237:13;3230:4;3222:6;3218:17;3183:78;:::i;:::-;3324:1;3280:20;;3316:10;;;3309:22;3356:13;;3378:75;3356:13;3440:1;3432:10;;3425:4;3413:17;;3378:75;:::i;:::-;3473:17;3492:1;3469:25;;2501:999;-1:-1:-1;;;;;2501:999:61:o;3505:127::-;3566:10;3561:3;3557:20;3554:1;3547:31;3597:4;3594:1;3587:15;3621:4;3618:1;3611:15;3637:330;3735:4;3793:11;3780:25;3887:3;3883:8;3872;3856:14;3852:29;3848:44;3828:18;3824:69;3814:97;;3907:1;3904;3897:12;3814:97;3928:33;;;;;3637:330;-1:-1:-1;;3637:330:61:o;3972:127::-;4033:10;4028:3;4024:20;4021:1;4014:31;4064:4;4061:1;4054:15;4088:4;4085:1;4078:15;4236:225;4303:9;;;4324:11;;;4321:134;;;4377:10;4372:3;4368:20;4365:1;4358:31;4412:4;4409:1;4402:15;4440:4;4437:1;4430:15;4466:286;4525:6;4578:2;4566:9;4557:7;4553:23;4549:32;4546:52;;;4594:1;4591;4584:12;4546:52;4620:23;;-1:-1:-1;;;;;4672:31:61;;4662:42;;4652:70;;4718:1;4715;4708:12",
    "linkReferences": {},
    "immutableReferences": {
      "46247": [
        {
          "start": 263,
          "length": 32
        }
      ],
      "46249": [
        {
          "start": 304,
          "length": 32
        }
      ],
      "46251": [
        {
          "start": 345,
          "length": 32
        }
      ],
      "47751": [
        {
          "start": 1021,
          "length": 32
        }
      ],
      "48366": [
        {
          "start": 1089,
          "length": 32
        },
        {
          "start": 1137,
          "length": 32
        },
        {
          "start": 1183,
          "length": 32
        },
        {
          "start": 1308,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
    "isPayable()": "ce46e046",
    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"eas\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"incentive\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Whether the resolver supports ETH transfers.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"PayingResolver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Checks if the resolver can be sent ETH.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"A sample schema resolver that pays attesters (and expects the payment to be returned during revocations).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/resolver/examples/PayingResolver.sol\":\"PayingResolver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"src/IEAS.sol\":{\"keccak256\":\"0xd5a192f0bcee5372b69b0bb746c26317a2691dd10bfa52adbd08a9b723a55036\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca836dd01016e7198a0b8e9e79d78512eb9db86dde6afd47f727f18d9a9c33a1\",\"dweb:/ipfs/QmXLTzcLUvA52qpVRUtVvj6L73cTmHk62jGsf6JErXFxD4\"]},\"src/ISchemaRegistry.sol\":{\"keccak256\":\"0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517\",\"dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp\"]},\"src/Semver.sol\":{\"keccak256\":\"0x5883c852730b00d73b10475f3b382afce8f30b89f337078ec03a66c463e048a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab7f1cf03a19860d07100bd61a8138346c5682bced5dbc569847d35241ba1fd\",\"dweb:/ipfs/QmfTTnWbarxDZuUCCextgxrTcATy1N1XoPBmFYj2nQZJUG\"]},\"src/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d\",\"dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC\"]},\"src/resolver/SchemaResolver.sol\":{\"keccak256\":\"0x0c0533594956d3a7d861a68127825cbde3bc9a89979ece3aa99c3820f4c5a251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://487e5c67f3d347f6f99b0857155aebbb015f63666ab46c57dffc72a7c6f5c06f\",\"dweb:/ipfs/QmeTmXPtumpWVxGY2NXQG3Fma73vh3Bjb6diuUHK52mpPD\"]},\"src/resolver/examples/PayingResolver.sol\":{\"keccak256\":\"0xf844e12883786be36b8963e7292bd21392c2beea587a75db90b1a5afc5189d82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b7f37f23e8d6c56cd7e1b28c669e4a98c7b9beb49ef028be79c7ba602f77fe9\",\"dweb:/ipfs/QmQ1TQ1ZN9TbAx4i9gwM2jZUruynZ8igin4Gs3sV565Dpg\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEAS",
              "name": "eas",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "incentive",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessDenied"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidEAS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotPayable"
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation",
              "name": "attestation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "attest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "isPayable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiAttest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiRevoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation",
              "name": "attestation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "revoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "params": {
              "attestation": "The new attestation."
            },
            "returns": {
              "_0": "Whether the attestation is valid."
            }
          },
          "isPayable()": {
            "returns": {
              "_0": "Whether the resolver supports ETH transfers."
            }
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "params": {
              "attestations": "The new attestations.",
              "values": "Explicit ETH amounts which were sent with each attestation."
            },
            "returns": {
              "_0": "Whether all the attestations are valid."
            }
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "params": {
              "attestations": "The existing attestations to be revoked.",
              "values": "Explicit ETH amounts which were sent with each revocation."
            },
            "returns": {
              "_0": "Whether the attestations can be revoked."
            }
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "params": {
              "attestation": "The existing attestation to be revoked."
            },
            "returns": {
              "_0": "Whether the attestation can be revoked."
            }
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "notice": "Processes an attestation and verifies whether it's valid."
          },
          "isPayable()": {
            "notice": "Checks if the resolver can be sent ETH."
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "notice": "Processes multiple attestations and verifies whether they are valid."
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "notice": "Processes revocation of multiple attestation and verifies they can be revoked."
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "notice": "Processes an attestation revocation and verifies if it can be revoked."
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/resolver/examples/PayingResolver.sol": "PayingResolver"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/Common.sol": {
        "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
        "urls": [
          "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
          "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
        ],
        "license": "MIT"
      },
      "src/IEAS.sol": {
        "keccak256": "0xd5a192f0bcee5372b69b0bb746c26317a2691dd10bfa52adbd08a9b723a55036",
        "urls": [
          "bzz-raw://ca836dd01016e7198a0b8e9e79d78512eb9db86dde6afd47f727f18d9a9c33a1",
          "dweb:/ipfs/QmXLTzcLUvA52qpVRUtVvj6L73cTmHk62jGsf6JErXFxD4"
        ],
        "license": "MIT"
      },
      "src/ISchemaRegistry.sol": {
        "keccak256": "0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4",
        "urls": [
          "bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517",
          "dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp"
        ],
        "license": "MIT"
      },
      "src/Semver.sol": {
        "keccak256": "0x5883c852730b00d73b10475f3b382afce8f30b89f337078ec03a66c463e048a8",
        "urls": [
          "bzz-raw://0ab7f1cf03a19860d07100bd61a8138346c5682bced5dbc569847d35241ba1fd",
          "dweb:/ipfs/QmfTTnWbarxDZuUCCextgxrTcATy1N1XoPBmFYj2nQZJUG"
        ],
        "license": "MIT"
      },
      "src/resolver/ISchemaResolver.sol": {
        "keccak256": "0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395",
        "urls": [
          "bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d",
          "dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC"
        ],
        "license": "MIT"
      },
      "src/resolver/SchemaResolver.sol": {
        "keccak256": "0x0c0533594956d3a7d861a68127825cbde3bc9a89979ece3aa99c3820f4c5a251",
        "urls": [
          "bzz-raw://487e5c67f3d347f6f99b0857155aebbb015f63666ab46c57dffc72a7c6f5c06f",
          "dweb:/ipfs/QmeTmXPtumpWVxGY2NXQG3Fma73vh3Bjb6diuUHK52mpPD"
        ],
        "license": "MIT"
      },
      "src/resolver/examples/PayingResolver.sol": {
        "keccak256": "0xf844e12883786be36b8963e7292bd21392c2beea587a75db90b1a5afc5189d82",
        "urls": [
          "bzz-raw://5b7f37f23e8d6c56cd7e1b28c669e4a98c7b9beb49ef028be79c7ba602f77fe9",
          "dweb:/ipfs/QmQ1TQ1ZN9TbAx4i9gwM2jZUruynZ8igin4Gs3sV565Dpg"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/resolver/examples/PayingResolver.sol",
    "id": 48463,
    "exportedSymbols": {
      "Address": [
        40962
      ],
      "Attestation": [
        43248
      ],
      "IEAS": [
        45511
      ],
      "PayingResolver": [
        48462
      ],
      "SchemaResolver": [
        48052
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1290:49",
    "nodes": [
      {
        "id": 48349,
        "nodeType": "PragmaDirective",
        "src": "33:23:49",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 48351,
        "nodeType": "ImportDirective",
        "src": "58:68:49",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48463,
        "sourceUnit": 40963,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48350,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40962,
              "src": "67:7:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48353,
        "nodeType": "ImportDirective",
        "src": "128:55:49",
        "nodes": [],
        "absolutePath": "src/resolver/SchemaResolver.sol",
        "file": "../SchemaResolver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48463,
        "sourceUnit": 48053,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48352,
              "name": "SchemaResolver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48052,
              "src": "137:14:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48356,
        "nodeType": "ImportDirective",
        "src": "185:51:49",
        "nodes": [],
        "absolutePath": "src/IEAS.sol",
        "file": "../../IEAS.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48463,
        "sourceUnit": 45512,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48354,
              "name": "IEAS",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45511,
              "src": "194:4:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48355,
              "name": "Attestation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43248,
              "src": "200:11:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48462,
        "nodeType": "ContractDefinition",
        "src": "382:940:49",
        "nodes": [
          {
            "id": 48362,
            "nodeType": "UsingForDirective",
            "src": "430:34:49",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 48360,
              "name": "Address",
              "nameLocations": [
                "436:7:49"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40962,
              "src": "436:7:49"
            },
            "typeName": {
              "id": 48361,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "448:15:49",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "id": 48364,
            "nodeType": "ErrorDefinition",
            "src": "470:21:49",
            "nodes": [],
            "errorSelector": "aa7feadc",
            "name": "InvalidValue",
            "nameLocation": "476:12:49",
            "parameters": {
              "id": 48363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "488:2:49"
            }
          },
          {
            "id": 48366,
            "nodeType": "VariableDeclaration",
            "src": "497:36:49",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_incentive",
            "nameLocation": "523:10:49",
            "scope": 48462,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48365,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "497:7:49",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 48382,
            "nodeType": "FunctionDefinition",
            "src": "540:100:49",
            "nodes": [],
            "body": {
              "id": 48381,
              "nodeType": "Block",
              "src": "601:39:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48377,
                      "name": "_incentive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48366,
                      "src": "611:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48378,
                      "name": "incentive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48371,
                      "src": "624:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "611:22:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48380,
                  "nodeType": "ExpressionStatement",
                  "src": "611:22:49"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 48374,
                    "name": "eas",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48369,
                    "src": "596:3:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEAS_$45511",
                      "typeString": "contract IEAS"
                    }
                  }
                ],
                "id": 48375,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 48373,
                  "name": "SchemaResolver",
                  "nameLocations": [
                    "581:14:49"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48052,
                  "src": "581:14:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "581:19:49"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 48372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48369,
                  "mutability": "mutable",
                  "name": "eas",
                  "nameLocation": "557:3:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48382,
                  "src": "552:8:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEAS_$45511",
                    "typeString": "contract IEAS"
                  },
                  "typeName": {
                    "id": 48368,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48367,
                      "name": "IEAS",
                      "nameLocations": [
                        "552:4:49"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45511,
                      "src": "552:4:49"
                    },
                    "referencedDeclaration": 45511,
                    "src": "552:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEAS_$45511",
                      "typeString": "contract IEAS"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48371,
                  "mutability": "mutable",
                  "name": "incentive",
                  "nameLocation": "570:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48382,
                  "src": "562:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "551:29:49"
            },
            "returnParameters": {
              "id": 48376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:49"
            },
            "scope": 48462,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48391,
            "nodeType": "FunctionDefinition",
            "src": "646:85:49",
            "nodes": [],
            "body": {
              "id": 48390,
              "nodeType": "Block",
              "src": "703:28:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 48388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "720:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 48387,
                  "id": 48389,
                  "nodeType": "Return",
                  "src": "713:11:49"
                }
              ]
            },
            "baseFunctions": [
              47799
            ],
            "functionSelector": "ce46e046",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPayable",
            "nameLocation": "655:9:49",
            "overrides": {
              "id": 48384,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "679:8:49"
            },
            "parameters": {
              "id": 48383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:2:49"
            },
            "returnParameters": {
              "id": 48387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48386,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48391,
                  "src": "697:4:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 48385,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "696:6:49"
            },
            "scope": 48462,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48421,
            "nodeType": "FunctionDefinition",
            "src": "737:251:49",
            "nodes": [],
            "body": {
              "id": 48420,
              "nodeType": "Block",
              "src": "837:151:49",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48402,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48396,
                      "src": "851:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 48403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "859:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "851:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48408,
                  "nodeType": "IfStatement",
                  "src": "847:52:49",
                  "trueBody": {
                    "id": 48407,
                    "nodeType": "Block",
                    "src": "862:37:49",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 48405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "883:5:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 48401,
                        "id": 48406,
                        "nodeType": "Return",
                        "src": "876:12:49"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48415,
                        "name": "_incentive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48366,
                        "src": "948:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 48411,
                              "name": "attestation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48394,
                              "src": "917:11:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Attestation_$43248_calldata_ptr",
                                "typeString": "struct Attestation calldata"
                              }
                            },
                            "id": 48412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "929:8:49",
                            "memberName": "attester",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43243,
                            "src": "917:20:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "909:8:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 48409,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "909:8:49",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "909:29:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 48414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "939:8:49",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "909:38:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "909:50:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48417,
                  "nodeType": "ExpressionStatement",
                  "src": "909:50:49"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 48418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "977:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 48401,
                  "id": 48419,
                  "nodeType": "Return",
                  "src": "970:11:49"
                }
              ]
            },
            "baseFunctions": [
              48023
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onAttest",
            "nameLocation": "746:8:49",
            "overrides": {
              "id": 48398,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "813:8:49"
            },
            "parameters": {
              "id": 48397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48394,
                  "mutability": "mutable",
                  "name": "attestation",
                  "nameLocation": "776:11:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48421,
                  "src": "755:32:49",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Attestation_$43248_calldata_ptr",
                    "typeString": "struct Attestation"
                  },
                  "typeName": {
                    "id": 48393,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48392,
                      "name": "Attestation",
                      "nameLocations": [
                        "755:11:49"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43248,
                      "src": "755:11:49"
                    },
                    "referencedDeclaration": 43248,
                    "src": "755:11:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Attestation_$43248_storage_ptr",
                      "typeString": "struct Attestation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48396,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "797:5:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48421,
                  "src": "789:13:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "754:49:49"
            },
            "returnParameters": {
              "id": 48401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48400,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48421,
                  "src": "831:4:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 48399,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "831:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "830:6:49"
            },
            "scope": 48462,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 48461,
            "nodeType": "FunctionDefinition",
            "src": "994:326:49",
            "nodes": [],
            "body": {
              "id": 48460,
              "nodeType": "Block",
              "src": "1094:226:49",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48432,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48426,
                      "src": "1108:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 48433,
                      "name": "_incentive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48366,
                      "src": "1116:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1108:18:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48438,
                  "nodeType": "IfStatement",
                  "src": "1104:61:49",
                  "trueBody": {
                    "id": 48437,
                    "nodeType": "Block",
                    "src": "1128:37:49",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 48435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1149:5:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 48431,
                        "id": 48436,
                        "nodeType": "Return",
                        "src": "1142:12:49"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48439,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48426,
                      "src": "1179:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 48440,
                      "name": "_incentive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48366,
                      "src": "1187:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1179:18:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48457,
                  "nodeType": "IfStatement",
                  "src": "1175:117:49",
                  "trueBody": {
                    "id": 48456,
                    "nodeType": "Block",
                    "src": "1199:93:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 48453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 48451,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48426,
                                "src": "1262:5:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 48452,
                                "name": "_incentive",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48366,
                                "src": "1270:10:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1262:18:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 48446,
                                        "name": "attestation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 48424,
                                        "src": "1229:11:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Attestation_$43248_calldata_ptr",
                                          "typeString": "struct Attestation calldata"
                                        }
                                      },
                                      "id": 48447,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1241:8:49",
                                      "memberName": "attester",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 43243,
                                      "src": "1229:20:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 48445,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1221:7:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 48444,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1221:7:49",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 48448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1221:29:49",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 48443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1213:8:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 48442,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1213:8:49",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 48449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1213:38:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 48450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1252:9:49",
                            "memberName": "sendValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40684,
                            "src": "1213:48:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 48454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1213:68:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48455,
                        "nodeType": "ExpressionStatement",
                        "src": "1213:68:49"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 48458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1309:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 48431,
                  "id": 48459,
                  "nodeType": "Return",
                  "src": "1302:11:49"
                }
              ]
            },
            "baseFunctions": [
              48034
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onRevoke",
            "nameLocation": "1003:8:49",
            "overrides": {
              "id": 48428,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1070:8:49"
            },
            "parameters": {
              "id": 48427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48424,
                  "mutability": "mutable",
                  "name": "attestation",
                  "nameLocation": "1033:11:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48461,
                  "src": "1012:32:49",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Attestation_$43248_calldata_ptr",
                    "typeString": "struct Attestation"
                  },
                  "typeName": {
                    "id": 48423,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48422,
                      "name": "Attestation",
                      "nameLocations": [
                        "1012:11:49"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43248,
                      "src": "1012:11:49"
                    },
                    "referencedDeclaration": 43248,
                    "src": "1012:11:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Attestation_$43248_storage_ptr",
                      "typeString": "struct Attestation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48426,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1054:5:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48461,
                  "src": "1046:13:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:49:49"
            },
            "returnParameters": {
              "id": 48431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48430,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48461,
                  "src": "1088:4:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 48429,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1087:6:49"
            },
            "scope": 48462,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48358,
              "name": "SchemaResolver",
              "nameLocations": [
                "409:14:49"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48052,
              "src": "409:14:49"
            },
            "id": 48359,
            "nodeType": "InheritanceSpecifier",
            "src": "409:14:49"
          }
        ],
        "canonicalName": "PayingResolver",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 48357,
          "nodeType": "StructuredDocumentation",
          "src": "238:144:49",
          "text": "@title PayingResolver\n @notice A sample schema resolver that pays attesters (and expects the payment to be returned during revocations)."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          48462,
          48052,
          46303,
          47725
        ],
        "name": "PayingResolver",
        "nameLocation": "391:14:49",
        "scope": 48463,
        "usedErrors": [
          43210,
          43214,
          43216,
          47746,
          47748,
          48364
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 49
}